{"version":3,"sources":["logo.svg","redux/practice/actions.js","helpers/storage.js","helpers/auth.js","views/practice/index.js","serviceWorker.js","redux/practice/reducer.js","redux/auth/actions.js","redux/auth/reducer.js","redux/cost/actions.js","redux/cost/reducer.js","redux/loan/actions.js","redux/loan/reducer.js","redux/income/actions.js","redux/income/reducer.js","redux/asset/actions.js","redux/asset/reducer.js","redux/reducers.js","redux/practice/saga.js","redux/api.js","redux/services.js","helpers/utility.js","redux/auth/saga.js","redux/cost/saga.js","redux/asset/saga.js","redux/loan/saga.js","redux/income/saga.js","redux/sagas.js","redux/store.js","route/publicRoute.js","route/privateRoute.js","views/login/index.js","views/register/index.js","components/menu.js","components/nav.js","components/base.js","views/home/index.js","views/cost/form2.js","views/cost/create.js","views/cost/edit.js","views/cost/form.js","views/cost/index.js","views/loan/form2.js","views/loan/create.js","views/loan/edit.js","views/loan/form.js","views/loan/index.js","views/asset/form.js","views/asset/index.js","views/asset/form2.js","views/asset/create.js","views/asset/edit.js","views/income/form2.js","views/income/create.js","views/income/edit.js","views/income/form.js","views/income/index.js","route/router.js","index.js"],"names":["module","exports","actions","GET_APPARELS_REQUEST","GET_APPARELS_SUCCESS","GET_APPARELS_FAILURE","getApparels","request","pgn","type","payload","success","data","apparels","failure","errs","errors","get","set","remove","has","key","getObj","JSON","parse","setObj","value","expires","stringify","localStorage","removeItem","e","now","Date","expiresIn","getItem","undefined","Math","abs","schedule","setItem","isLoggedIn","token","getToken","isTokenExpired","setToken","clearToken","getProfile","decode","err","decodeToken","exp","idToken","storage","Practice","props","logout","history","push","state","this","onClick","update","Component","connect","practice","Boolean","window","location","hostname","match","initState","roles","isLoading","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","login","profile","register","isLoggingIn","isLocked","GET_COSTS_REQUEST","GET_COSTS_SUCCESS","GET_COSTS_FAILURE","GET_COST_FAILURE","GET_COST_REQUEST","GET_COST_SUCCESS","CREATE_COST_REQUEST","CREATE_COST_SUCCESS","CREATE_COST_FAILURE","UPDATE_COST_REQUEST","UPDATE_COST_SUCCESS","UPDATE_COST_FAILURE","getCosts","costs","getCost","cost","createCost","updateCost","updatedCost","GET_LOANS_REQUEST","GET_LOANS_SUCCESS","GET_LOANS_FAILURE","GET_LOAN_FAILURE","GET_LOAN_REQUEST","GET_LOAN_SUCCESS","CREATE_LOAN_REQUEST","CREATE_LOAN_SUCCESS","CREATE_LOAN_FAILURE","UPDATE_LOAN_REQUEST","UPDATE_LOAN_SUCCESS","UPDATE_LOAN_FAILURE","getLoans","loans","getLoan","loan","createLoan","updateLoan","updatedLoan","GET_INCOMES_REQUEST","GET_INCOMES_SUCCESS","GET_INCOMES_FAILURE","GET_INCOME_FAILURE","GET_INCOME_REQUEST","GET_INCOME_SUCCESS","CREATE_INCOME_REQUEST","CREATE_INCOME_SUCCESS","CREATE_INCOME_FAILURE","UPDATE_INCOME_REQUEST","UPDATE_INCOME_SUCCESS","UPDATE_INCOME_FAILURE","getIncomes","incomes","getIncome","income","createIncome","updateIncome","updatedIncome","GET_ASSETS_REQUEST","GET_ASSETS_SUCCESS","GET_ASSETS_FAILURE","GET_ASSET_FAILURE","GET_ASSET_REQUEST","GET_ASSET_SUCCESS","CREATE_ASSET_REQUEST","CREATE_ASSET_SUCCESS","CREATE_ASSET_FAILURE","UPDATE_ASSET_REQUEST","UPDATE_ASSET_SUCCESS","UPDATE_ASSET_FAILURE","getAssets","assets","getAsset","asset","createAsset","updateAsset","updatedAsset","action","error","auth","isRegistering","isRegistered","LOGOUT","isCreated","isCreating","currentUser","newUser","isUpdated","isUpdating","updatedUser","currentLoan","newLoan","currentAsset","newAsset","currentIncome","newIncome","rootSaga","takeLatest","apparelActions","evt","call","resp","put","all","fork","methodTypes","headers","methodType","url","requireAuth","authHelpers","Authorization","options","method","body","Promise","resolve","reject","fetch","then","response","json","catch","userService","formatPgn","id","pageSize","current","getErrorMessage","ex","status","message","loginRequest","registerRequest","loginSuccess","takeEvery","authActions","services","access_token","length","costActions","result","assetActions","loanActions","incomeActions","practiceSagas","authSagas","costSagas","assetSagas","loanSagas","incomeSagas","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","reducers","applyMiddleware","run","isAuthenticated","component","rest","to","PrivateRoute","Login","handleChange","setState","target","name","handleSubmit","username","password","grant_type","client_id","client_secret","style","minHeight","span","className","initialValues","remember","onFinish","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","href","htmlType","labelCol","xs","sm","wrapperCol","label","Password","marginLeft","console","log","title","link","nav","Menu","SubMenu","handleClick","currrentKey","pathname","theme","defaultSelectedKeys","mode","map","item","icon","PieChartOutlined","TeamOutlined","withRouter","Header","Layout","Content","Footer","Sider","SiderDemo","collapsed","onCollapse","subtitle","buttons","collapsible","color","padding","margin","size","textAlign","marginTop","children","React","index","layout","validateMessages","types","email","number","range","form","values","onSubmit","date","format","nameChange","count","details","fields","obj","Object","keys","field","parseFloat","moment","TextArea","min","offset","create","params","defaultPagination","handleRefresh","page","pagination","PlusCircleTwoTone","float","columns","dataIndex","responsive","render","tableProps","dataSource","loading","onChange","current_page","per_page","total","createHistory","AppRouter","path","exact","Register","Home","NewCost","Cost","EditCost","NewLoan","Loan","EditLoan","NewAsset","Asset","EditAsset","NewIncome","Income","EditIncome","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a54c550c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","const actions = {\r\n  GET_APPARELS_REQUEST: 'GET_APPARELS_REQUEST',\r\n  GET_APPARELS_SUCCESS: 'GET_APPARELS_SUCCESS',\r\n  GET_APPARELS_FAILURE: 'GET_APPARELS_FAILURE',\r\n\r\n  getApparels: {\r\n    request: pgn => ({ type: actions.GET_APPARELS_REQUEST, payload: pgn }),\r\n    success: data => ({ type: actions.GET_APPARELS_SUCCESS, apparels: data }),\r\n    failure: errs => ({ type: actions.GET_APPARELS_FAILURE, errors: errs }),\r\n  },\r\n};\r\nexport default actions;\r\n","export default {\r\n  get,\r\n  set,\r\n  remove,\r\n  has,\r\n  getObj,\r\n  setObj,\r\n};\r\n\r\nexport function remove(key) {\r\n  try {\r\n    localStorage.removeItem(key);\r\n    localStorage.removeItem(`${key}_expiresIn`);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function get(key) {\r\n  const now = Date.now();\r\n\r\n  let expiresIn = localStorage.getItem(`${key}_expiresIn`);\r\n  if (expiresIn === undefined || expiresIn === null) { expiresIn = 0; }\r\n\r\n  if (expiresIn < now) {\r\n    remove(key);\r\n    return null;\r\n  }\r\n  try {\r\n    const value = localStorage.getItem(key);\r\n    return value;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function has(key) {\r\n  return !!get(key);\r\n}\r\n\r\nexport function set(key, value, expires) {\r\n  if (expires === undefined || expires === null) {\r\n    expires = 365 * 24 * 60 * 60;\r\n  } else {\r\n    expires = Math.abs(expires);\r\n  }\r\n\r\n  const now = Date.now();\r\n  const schedule = now + expires * 1000;\r\n  try {\r\n    localStorage.setItem(key, value);\r\n    localStorage.setItem(`${key}_expiresIn`, schedule);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function getObj(key) {\r\n  return JSON.parse(get(key));\r\n}\r\n\r\nexport function setObj(key, value, expires) {\r\n  return set(key, JSON.stringify(value), expires);\r\n}\r\n","import decode from 'jwt-decode';\r\nimport storage from './storage';\r\n\r\nconst ID_TOKEN_KEY = 'id_token_CostApp';\r\n\r\nexport default {\r\n  isLoggedIn,\r\n  isTokenExpired,\r\n  setToken,\r\n  clearToken,\r\n  getToken,\r\n  getProfile,\r\n  decodeToken,\r\n};\r\n\r\nexport function isLoggedIn() {\r\n  const token = getToken();\r\n  return token && !isTokenExpired(token);\r\n}\r\n\r\nexport function isTokenExpired(token) {\r\n\r\n  if (!token) {\r\n    return true;\r\n  }\r\n  try {\r\n    const decoded = decode(token);\r\n    if (decoded.exp < Date.now() / 1000) { // Checking if token is expired. N\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  } catch (err) {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function setToken(idToken) {\r\n  storage.setObj(ID_TOKEN_KEY, idToken);\r\n}\r\n\r\nexport function clearToken() {\r\n  storage.remove(ID_TOKEN_KEY);\r\n}\r\n\r\nexport function getToken() {\r\n  try {\r\n    const idToken = storage.getObj(ID_TOKEN_KEY);\r\n    return idToken;\r\n  } catch (err) {\r\n    clearToken();\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getProfile() {\r\n  const token = getToken();\r\n  if (token) {\r\n    try {\r\n      return decode(token);\r\n    } catch (err) {\r\n      clearToken();\r\n      return null;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function decodeToken(token) {\r\n  return decode(token);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/practice/actions';\r\nimport {clearToken} from '../../helpers/auth';\r\n\r\nclass Practice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getApparels } = this.props;\r\n    getApparels();\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const update = {};\r\n    // if (props.isLoading !== state.isLoading) {\r\n    //   update.isLoading = props.isLoading;\r\n    // }\r\n    if (props.apparels) {\r\n      update.apparels = props.apparels;\r\n    }\r\n    return update;\r\n  }\r\n  logout=()=>{\r\n    clearToken() ;\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { apparels } = this.state\r\n    return (\r\n      <div>\r\n        App:{apparels && apparels.data}\r\n        <button onClick={this.logout}>logout</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    // isLoading: state.newUser.isLoading,\r\n    apparels: state.practice.apparels,\r\n  }),\r\n  { getApparels: actions.getApparels.request },\r\n)(Practice);\r\n// export default Practice;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import actions from './actions';\r\n\r\nconst initState = { roles: [], isLoading: false };\r\n\r\nexport default function rolesReducer(state = initState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_APPARELS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case actions.GET_APPARELS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        apparels: action.apparels,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case actions.GET_APPARELS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.errors,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const actions = {\r\n  // CHECK_AUTHORIZATION  : 'CHECK_AUTHORIZATION',\r\n  LOGIN_REQUEST        : 'LOGIN_REQUEST',\r\n  LOGIN_SUCCESS        : 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE        : 'LOGIN_FAILURE',\r\n\r\n  REGISTER_REQUEST        : 'REGISTER_REQUEST',\r\n  REGISTER_SUCCESS        : 'REGISTER_SUCCESS',\r\n  REGISTER_FAILURE        : 'REGISTER_FAILURE',\r\n  // SEND_OTP_REQUEST     : 'SEND_OTP_REQUEST',\r\n  // SEND_OTP_SUCCESS     : 'SEND_OTP_SUCCESS',\r\n  // SEND_OTP_FAILURE     : 'SEND_OTP_FAILURE',\r\n  // REFRESH_TOKEN_REQUEST: 'REFRESH_TOKEN_REQUEST',\r\n  // REFRESH_TOKEN_SUCCESS: 'REFRESH_TOKEN_SUCCESS',\r\n  // REFRESH_TOKEN_FAILURE: 'REFRESH_TOKEN_FAILURE',\r\n  // LOGOUT               : 'LOGOUT',\r\n  // LOCK_APP_REQUEST     : 'LOCK_APP_REQUEST',\r\n  // LOCK_APP_SUCCESS     : 'LOCK_APP_SUCCESS',\r\n  // UNLOCK_APP_REQUEST   : 'UNLOCK_APP_REQUEST',\r\n  // UNLOCK_APP_SUCCESS   : 'UNLOCK_APP_SUCCESS',\r\n  // UNLOCK_APP_FAILURE   : 'UNLOCK_APP_FAILURE',\r\n\r\n  // checkAuthorization: {\r\n  //   request: ()               => ({ type: actions.CHECK_AUTHORIZATION })\r\n  // },\r\n  login: {\r\n    request: (data)           => ({ type: actions.LOGIN_REQUEST, payload: data }),\r\n    success: (token, profile) => ({ type: actions.LOGIN_SUCCESS, token: token, profile: profile }),\r\n    failure: (errs)           => ({ type: actions.LOGIN_FAILURE, errors: errs })\r\n  },\r\n\r\n  register: {\r\n    request: (data)           => ({ type: actions.REGISTER_REQUEST, payload: data }),\r\n    success: (data)           => ({ type: actions.REGISTER_SUCCESS, data: data }),\r\n    failure: (errs)           => ({ type: actions.REGISTER_FAILURE, errors: errs })\r\n  },\r\n  // lockApp: {\r\n  //   request: ()               => ({ type: actions.LOCK_APP_REQUEST }),\r\n  //   success: ()               => ({ type: actions.LOCK_APP_SUCCESS }),\r\n  // },\r\n  // unlockApp: {\r\n  //   request: ()               => ({ type: actions.UNLOCK_APP_REQUEST }),\r\n  //   success: (token, profile) => ({ type: actions.UNLOCK_APP_SUCCESS, token: token, profile: profile }),\r\n  //   failure: (errs)           => ({ type: actions.UNLOCK_APP_FAILURE, errors: errs })\r\n  // },\r\n  // logout: {\r\n  //   request: ()               => ({ type: actions.LOGOUT }),\r\n  // },\r\n  // sendOtp: {\r\n  //   request: (data)           => ({ type: actions.SEND_OTP_REQUEST, payload: data }),\r\n  //   success: ()               => ({ type: actions.SEND_OTP_SUCCESS }),\r\n  //   failure: (errs)           => ({ type: actions.SEND_OTP_FAILURE, errors: errs }),\r\n  // },\r\n  // refreshToken: {\r\n  //   request: ()               => ({ type: actions.REFRESH_TOKEN_REQUEST }),\r\n  //   success: (token, profile) => ({ type: actions.REFRESH_TOKEN_SUCCESS, token: token, profile: profile }),\r\n  //   failure: (errs)           => ({ type: actions.REFRESH_TOKEN_FAILURE, errors: errs })\r\n  // }\r\n};\r\nexport default actions;\r\n","import actions from './actions';\r\n\r\nconst initState = { idToken: null, isLoggingIn: false, isLoggedIn: false, isLocked: false };\r\n\r\nexport default function authReducer(state = initState, action) {\r\n  switch (action.type) {\r\n    case actions.LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        isLoggedIn: false,\r\n        errors: null\r\n      };\r\n    case actions.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        idToken: action.token,\r\n        profile: action.profile,\r\n        isLoggingIn: false,\r\n        isLoggedIn: true,\r\n        errors: null\r\n      };\r\n    case actions.LOGIN_FAILURE:\r\n      return {\r\n        ...initState,\r\n        idToken: null,\r\n        errors: action.errors,\r\n        isLoggedIn: false,\r\n        isLoggingIn: false\r\n      };\r\n\r\n    case actions.REGISTER_REQUEST:\r\n      return {\r\n        ...state,\r\n        isRegistering: true,\r\n        isRegistered: false,\r\n        errors: null\r\n      };\r\n    case actions.REGISTER_SUCCESS:\r\n      \r\n      return {\r\n        ...state,\r\n        profile: action.data,\r\n        isRegistering: false,\r\n        isRegistered: true,\r\n        errors: null\r\n      };\r\n    case actions.REGISTER_FAILURE:\r\n      return {\r\n        ...initState,\r\n       \r\n        errors: action.errors,\r\n        isRegistering: false,\r\n        isRegistered: false\r\n      };\r\n    // case actions.REFRESH_TOKEN_REQUEST:\r\n    //   return {\r\n    //     ...state\r\n    //   };\r\n    // case actions.REFRESH_TOKEN_SUCCESS:\r\n    //   return {\r\n    //     ...state,\r\n    //     idToken: action.token,\r\n    //     profile: action.profile,\r\n    //     isLoggingIn: false,\r\n    //     isLoggedIn: true,\r\n    //     errors: null\r\n    //   };\r\n    // case actions.REFRESH_TOKEN_FAILURE:\r\n    //   return {\r\n    //     ...state,\r\n    //     idToken: null,\r\n    //     isLoggedIn: false,\r\n    //     errors: action.errors\r\n    //   };\r\n    // case actions.SEND_OTP_REQUEST:\r\n    //   return {\r\n    //     ...state,\r\n    //     otpData: action.payload,\r\n    //     isLoading: true\r\n    //   };\r\n    // case actions.SEND_OTP_SUCCESS:\r\n    //   return {\r\n    //     ...state,\r\n    //     isLoading: false,\r\n    //     otpSent: true\r\n    //   };\r\n    // case actions.SEND_OTP_FAILURE:\r\n    //   return {\r\n    //     ...state,\r\n    //     isLoading: false,\r\n    //     errors: action.errors\r\n    //   };\r\n    // case actions.LOCK_APP_REQUEST:\r\n    //   return {\r\n    //     ...state,\r\n    //     isLocking: true\r\n    //   }\r\n    // case actions.LOCK_APP_SUCCESS:\r\n    //   return {\r\n    //     ...state,\r\n    //     isLocking: false,\r\n    //     isLocked: true\r\n    //   }\r\n    // case actions.UNLOCK_APP_REQUEST:\r\n    //   return {\r\n    //     ...state,\r\n    //     isUnlocking: true\r\n    //   }\r\n    // case actions.UNLOCK_APP_SUCCESS:\r\n    //   return {\r\n    //     ...state,\r\n    //     isUnlocking: false,\r\n    //     idToken: action.token,\r\n    //     profile: action.profile,\r\n    //     isLoggedIn: true,\r\n    //     errors: null\r\n    //   }\r\n    // case actions.UNLOCK_APP_FAILURE:\r\n    //   return {\r\n    //     ...state,\r\n    //     idToken: null,\r\n    //     isUnlocking: false,\r\n    //     errors: action.errors\r\n    //   };\r\n    case actions.LOGOUT:\r\n      return initState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const actions = {\r\n  GET_COSTS_REQUEST: 'GET_COSTS_REQUEST',\r\n  GET_COSTS_SUCCESS: 'GET_COSTS_SUCCESS',\r\n  GET_COSTS_FAILURE: 'GET_COSTS_FAILURE',\r\n\r\n  GET_COST_FAILURE: 'GET_COST_FAILURE',\r\n  GET_COST_REQUEST: 'GET_COST_REQUEST',\r\n  GET_COST_SUCCESS: 'GET_COST_SUCCESS',\r\n\r\n\r\n  CREATE_COST_REQUEST: 'CREATE_COST_REQUEST',\r\n  CREATE_COST_SUCCESS: 'CREATE_COST_SUCCESS',\r\n  CREATE_COST_FAILURE: 'CREATE_COST_FAILURE',\r\n\r\n  UPDATE_COST_REQUEST: 'UPDATE_COST_REQUEST',\r\n  UPDATE_COST_SUCCESS: 'UPDATE_COST_SUCCESS',\r\n  UPDATE_COST_FAILURE: 'UPDATE_COST_FAILURE',\r\n\r\n\r\n  getCosts: {\r\n    request: pgn => ({ type: actions.GET_COSTS_REQUEST, payload: pgn }),\r\n    success: data => ({ type: actions.GET_COSTS_SUCCESS, costs: data }),\r\n    failure: errs => ({ type: actions.GET_COSTS_FAILURE, errors: errs }),\r\n  },\r\n\r\n  getCost: {\r\n    request: data => ({ type: actions.GET_COST_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.GET_COST_SUCCESS, cost: data }),\r\n    failure: errs => ({ type: actions.GET_COST_FAILURE, errors: errs }),\r\n  },\r\n  createCost: {\r\n    request: data => ({ type: actions.CREATE_COST_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.CREATE_COST_SUCCESS, cost: data }),\r\n    failure: errs => ({ type: actions.CREATE_COST_FAILURE, errors: errs }),\r\n  },\r\n  updateCost: {\r\n    request: data => ({ type: actions.UPDATE_COST_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.UPDATE_COST_SUCCESS, updatedCost: data }),\r\n    failure: errs => ({ type: actions.UPDATE_COST_FAILURE, errors: errs }),\r\n  },\r\n};\r\nexport default actions;\r\n","import actions from './actions';\r\n\r\nconst initState = { roles: [], isLoading: false };\r\n\r\nexport default function rolesReducer(state = initState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_COSTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case actions.GET_COSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        costs: action.costs,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case actions.GET_COSTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.errors,\r\n      };\r\n\r\n    case actions.GET_COST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        cost:'',\r\n      };\r\n    case actions.GET_COST_SUCCESS:\r\n      \r\n      return {\r\n        ...state,\r\n        cost: action.cost,\r\n        isLoading: false,\r\n        errors: null,\r\n      };\r\n    case actions.GET_COST_FAILURE:\r\n      return {\r\n        ...initState,\r\n        isLoading: false,\r\n        errors: action.errors,\r\n      };\r\n\r\n\r\n    case actions.CREATE_COST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isCreated: false,\r\n        isCreating: true,\r\n\r\n      };\r\n    case actions.CREATE_COST_SUCCESS:\r\n\r\n      return {\r\n        ...state,\r\n        currentUser: action.newUser,\r\n        isCreated: true,\r\n        isCreating: false,\r\n\r\n        error: null,\r\n      };\r\n    case actions.CREATE_COST_FAILURE:\r\n      return {\r\n        isCreating: false,\r\n        isCreated: null,\r\n        error: action.errors,\r\n      };\r\n\r\n\r\n    case actions.UPDATE_COST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isUpdated: false,\r\n        isUpdating: true,\r\n      };\r\n    case actions.UPDATE_COST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentUser: action.updatedUser,\r\n        isUpdated: true,\r\n        error: null,\r\n        isUpdating: false,\r\n\r\n      };\r\n    case actions.UPDATE_COST_FAILURE:\r\n      return {\r\n        isUpdated: null,\r\n        isUpdating: false,\r\n        error: action.errors,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const actions = {\r\n  GET_LOANS_REQUEST: 'GET_LOANS_REQUEST',\r\n  GET_LOANS_SUCCESS: 'GET_LOANS_SUCCESS',\r\n  GET_LOANS_FAILURE: 'GET_LOANS_FAILURE',\r\n\r\n  GET_LOAN_FAILURE: 'GET_LOAN_FAILURE',\r\n  GET_LOAN_REQUEST: 'GET_LOAN_REQUEST',\r\n  GET_LOAN_SUCCESS: 'GET_LOAN_SUCCESS',\r\n\r\n\r\n  CREATE_LOAN_REQUEST: 'CREATE_LOAN_REQUEST',\r\n  CREATE_LOAN_SUCCESS: 'CREATE_LOAN_SUCCESS',\r\n  CREATE_LOAN_FAILURE: 'CREATE_LOAN_FAILURE',\r\n\r\n  UPDATE_LOAN_REQUEST: 'UPDATE_LOAN_REQUEST',\r\n  UPDATE_LOAN_SUCCESS: 'UPDATE_LOAN_SUCCESS',\r\n  UPDATE_LOAN_FAILURE: 'UPDATE_LOAN_FAILURE',\r\n\r\n\r\n  getLoans: {\r\n    request: pgn => ({ type: actions.GET_LOANS_REQUEST, payload: pgn }),\r\n    success: data => ({ type: actions.GET_LOANS_SUCCESS, loans: data }),\r\n    failure: errs => ({ type: actions.GET_LOANS_FAILURE, errors: errs }),\r\n  },\r\n\r\n  getLoan: {\r\n    request: data => ({ type: actions.GET_LOAN_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.GET_LOAN_SUCCESS, loan: data }),\r\n    failure: errs => ({ type: actions.GET_LOAN_FAILURE, errors: errs }),\r\n  },\r\n  createLoan: {\r\n    request: data => ({ type: actions.CREATE_LOAN_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.CREATE_LOAN_SUCCESS, loan: data }),\r\n    failure: errs => ({ type: actions.CREATE_LOAN_FAILURE, errors: errs }),\r\n  },\r\n  updateLoan: {\r\n    request: data => ({ type: actions.UPDATE_LOAN_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.UPDATE_LOAN_SUCCESS, updatedLoan: data }),\r\n    failure: errs => ({ type: actions.UPDATE_LOAN_FAILURE, errors: errs }),\r\n  },\r\n};\r\nexport default actions;\r\n","import actions from './actions';\r\n\r\nconst initState = { roles: [], isLoading: false };\r\n\r\nexport default function rolesReducer(state = initState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_LOANS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case actions.GET_LOANS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loans: action.loans,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case actions.GET_LOANS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.errors,\r\n      };\r\n\r\n    case actions.GET_LOAN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        loan:'',\r\n      };\r\n    case actions.GET_LOAN_SUCCESS:\r\n      \r\n      return {\r\n        ...state,\r\n        loan: action.loan,\r\n        isLoading: false,\r\n        errors: null,\r\n      };\r\n    case actions.GET_LOAN_FAILURE:\r\n      return {\r\n        ...initState,\r\n        isLoading: false,\r\n        errors: action.errors,\r\n      };\r\n\r\n\r\n    case actions.CREATE_LOAN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isCreated: false,\r\n        isCreating: true,\r\n\r\n      };\r\n    case actions.CREATE_LOAN_SUCCESS:\r\n\r\n      return {\r\n        ...state,\r\n        currentLoan: action.newLoan,\r\n        isCreated: true,\r\n        isCreating: false,\r\n\r\n        error: null,\r\n      };\r\n    case actions.CREATE_LOAN_FAILURE:\r\n      return {\r\n        isCreating: false,\r\n        isCreated: null,\r\n        error: action.errors,\r\n      };\r\n\r\n\r\n    case actions.UPDATE_LOAN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isUpdated: false,\r\n        isUpdating: true,\r\n      };\r\n    case actions.UPDATE_LOAN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentLoan: action.updatedLoan,\r\n        isUpdated: true,\r\n        error: null,\r\n        isUpdating: false,\r\n\r\n      };\r\n    case actions.UPDATE_LOAN_FAILURE:\r\n      return {\r\n        isUpdated: null,\r\n        isUpdating: false,\r\n        error: action.errors,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const actions = {\r\n  GET_INCOMES_REQUEST: 'GET_INCOMES_REQUEST',\r\n  GET_INCOMES_SUCCESS: 'GET_INCOMES_SUCCESS',\r\n  GET_INCOMES_FAILURE: 'GET_INCOMES_FAILURE',\r\n\r\n  GET_INCOME_FAILURE: 'GET_INCOME_FAILURE',\r\n  GET_INCOME_REQUEST: 'GET_INCOME_REQUEST',\r\n  GET_INCOME_SUCCESS: 'GET_INCOME_SUCCESS',\r\n\r\n\r\n  CREATE_INCOME_REQUEST: 'CREATE_INCOME_REQUEST',\r\n  CREATE_INCOME_SUCCESS: 'CREATE_INCOME_SUCCESS',\r\n  CREATE_INCOME_FAILURE: 'CREATE_INCOME_FAILURE',\r\n\r\n  UPDATE_INCOME_REQUEST: 'UPDATE_INCOME_REQUEST',\r\n  UPDATE_INCOME_SUCCESS: 'UPDATE_INCOME_SUCCESS',\r\n  UPDATE_INCOME_FAILURE: 'UPDATE_INCOME_FAILURE',\r\n\r\n\r\n  getIncomes: {\r\n    request: pgn => ({ type: actions.GET_INCOMES_REQUEST, payload: pgn }),\r\n    success: data => ({ type: actions.GET_INCOMES_SUCCESS, incomes: data }),\r\n    failure: errs => ({ type: actions.GET_INCOMES_FAILURE, errors: errs }),\r\n  },\r\n\r\n  getIncome: {\r\n    request: data => ({ type: actions.GET_INCOME_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.GET_INCOME_SUCCESS, income: data }),\r\n    failure: errs => ({ type: actions.GET_INCOME_FAILURE, errors: errs }),\r\n  },\r\n  createIncome: {\r\n    request: data => ({ type: actions.CREATE_INCOME_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.CREATE_INCOME_SUCCESS, income: data }),\r\n    failure: errs => ({ type: actions.CREATE_INCOME_FAILURE, errors: errs }),\r\n  },\r\n  updateIncome: {\r\n    request: data => ({ type: actions.UPDATE_INCOME_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.UPDATE_INCOME_SUCCESS, updatedIncome: data }),\r\n    failure: errs => ({ type: actions.UPDATE_INCOME_FAILURE, errors: errs }),\r\n  },\r\n};\r\nexport default actions;\r\n","import actions from './actions';\r\n\r\nconst initState = { roles: [], isLoading: false };\r\n\r\nexport default function rolesReducer(state = initState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_INCOMES_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case actions.GET_INCOMES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        incomes: action.incomes,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case actions.GET_INCOMES_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.errors,\r\n      };\r\n\r\n    case actions.GET_INCOME_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        income:'',\r\n      };\r\n    case actions.GET_INCOME_SUCCESS:\r\n      \r\n      return {\r\n        ...state,\r\n        income: action.income,\r\n        isLoading: false,\r\n        errors: null,\r\n      };\r\n    case actions.GET_INCOME_FAILURE:\r\n      return {\r\n        ...initState,\r\n        isLoading: false,\r\n        errors: action.errors,\r\n      };\r\n\r\n\r\n    case actions.CREATE_INCOME_REQUEST:\r\n      return {\r\n        ...state,\r\n        isCreated: false,\r\n        isCreating: true,\r\n\r\n      };\r\n    case actions.CREATE_INCOME_SUCCESS:\r\n\r\n      return {\r\n        ...state,\r\n        currentIncome: action.newIncome,\r\n        isCreated: true,\r\n        isCreating: false,\r\n\r\n        error: null,\r\n      };\r\n    case actions.CREATE_INCOME_FAILURE:\r\n      return {\r\n        isCreating: false,\r\n        isCreated: null,\r\n        error: action.errors,\r\n      };\r\n\r\n\r\n    case actions.UPDATE_INCOME_REQUEST:\r\n      return {\r\n        ...state,\r\n        isUpdated: false,\r\n        isUpdating: true,\r\n      };\r\n    case actions.UPDATE_INCOME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentIncome: action.updatedIncome,\r\n        isUpdated: true,\r\n        error: null,\r\n        isUpdating: false,\r\n\r\n      };\r\n    case actions.UPDATE_INCOME_FAILURE:\r\n      return {\r\n        isUpdated: null,\r\n        isUpdating: false,\r\n        error: action.errors,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const actions = {\r\n  GET_ASSETS_REQUEST: 'GET_ASSETS_REQUEST',\r\n  GET_ASSETS_SUCCESS: 'GET_ASSETS_SUCCESS',\r\n  GET_ASSETS_FAILURE: 'GET_ASSETS_FAILURE',\r\n\r\n  GET_ASSET_FAILURE: 'GET_ASSET_FAILURE',\r\n  GET_ASSET_REQUEST: 'GET_ASSET_REQUEST',\r\n  GET_ASSET_SUCCESS: 'GET_ASSET_SUCCESS',\r\n\r\n\r\n  CREATE_ASSET_REQUEST: 'CREATE_ASSET_REQUEST',\r\n  CREATE_ASSET_SUCCESS: 'CREATE_ASSET_SUCCESS',\r\n  CREATE_ASSET_FAILURE: 'CREATE_ASSET_FAILURE',\r\n\r\n  UPDATE_ASSET_REQUEST: 'UPDATE_ASSET_REQUEST',\r\n  UPDATE_ASSET_SUCCESS: 'UPDATE_ASSET_SUCCESS',\r\n  UPDATE_ASSET_FAILURE: 'UPDATE_ASSET_FAILURE',\r\n\r\n\r\n  getAssets: {\r\n    request: pgn => ({ type: actions.GET_ASSETS_REQUEST, payload: pgn }),\r\n    success: data => ({ type: actions.GET_ASSETS_SUCCESS, assets: data }),\r\n    failure: errs => ({ type: actions.GET_ASSETS_FAILURE, errors: errs }),\r\n  },\r\n\r\n  getAsset: {\r\n    request: data => ({ type: actions.GET_ASSET_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.GET_ASSET_SUCCESS, asset: data }),\r\n    failure: errs => ({ type: actions.GET_ASSET_FAILURE, errors: errs }),\r\n  },\r\n  createAsset: {\r\n    request: data => ({ type: actions.CREATE_ASSET_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.CREATE_ASSET_SUCCESS, asset: data }),\r\n    failure: errs => ({ type: actions.CREATE_ASSET_FAILURE, errors: errs }),\r\n  },\r\n  updateAsset: {\r\n    request: data => ({ type: actions.UPDATE_ASSET_REQUEST, payload: data }),\r\n    success: data => ({ type: actions.UPDATE_ASSET_SUCCESS, updatedAsset: data }),\r\n    failure: errs => ({ type: actions.UPDATE_ASSET_FAILURE, errors: errs }),\r\n  },\r\n};\r\nexport default actions;\r\n","import actions from './actions';\r\n\r\nconst initState = { roles: [], isLoading: false };\r\n\r\nexport default function rolesReducer(state = initState, action) {\r\n  switch (action.type) {\r\n    case actions.GET_ASSETS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case actions.GET_ASSETS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        assets: action.assets,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case actions.GET_ASSETS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.errors,\r\n      };\r\n\r\n    case actions.GET_ASSET_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        asset:'',\r\n      };\r\n    case actions.GET_ASSET_SUCCESS:\r\n      \r\n      return {\r\n        ...state,\r\n        asset: action.asset,\r\n        isLoading: false,\r\n        errors: null,\r\n      };\r\n    case actions.GET_ASSET_FAILURE:\r\n      return {\r\n        ...initState,\r\n        isLoading: false,\r\n        errors: action.errors,\r\n      };\r\n\r\n\r\n    case actions.CREATE_ASSET_REQUEST:\r\n      return {\r\n        ...state,\r\n        isCreated: false,\r\n        isCreating: true,\r\n\r\n      };\r\n    case actions.CREATE_ASSET_SUCCESS:\r\n\r\n      return {\r\n        ...state,\r\n        currentAsset: action.newAsset,\r\n        isCreated: true,\r\n        isCreating: false,\r\n\r\n        error: null,\r\n      };\r\n    case actions.CREATE_ASSET_FAILURE:\r\n      return {\r\n        isCreating: false,\r\n        isCreated: null,\r\n        error: action.errors,\r\n      };\r\n\r\n\r\n    case actions.UPDATE_ASSET_REQUEST:\r\n      return {\r\n        ...state,\r\n        isUpdated: false,\r\n        isUpdating: true,\r\n      };\r\n    case actions.UPDATE_ASSET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentAsset: action.updatedAsset,\r\n        isUpdated: true,\r\n        error: null,\r\n        isUpdating: false,\r\n\r\n      };\r\n    case actions.UPDATE_ASSET_FAILURE:\r\n      return {\r\n        isUpdated: null,\r\n        isUpdating: false,\r\n        error: action.errors,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import practice from './practice/reducer';\r\nimport auth from './auth/reducer';\r\nimport cost from './cost/reducer';\r\nimport loan from './loan/reducer';\r\nimport income from './income/reducer';\r\nimport asset from './asset/reducer';\r\nexport default {\r\n  practice,\r\n  auth,\r\n  cost,\r\n  loan,\r\n  asset,\r\n  income\r\n};\r\n","import {\r\n  all, takeEvery, takeLatest, put, fork, call,\r\n} from 'redux-saga/effects';\r\nimport apparelActions from './actions';\r\n// import services from '../services';\r\n// import { getErrorMessage, isEmptyObject } from '../../helpers/utility';\r\n\r\n\r\nexport function* getApparels() {\r\n  yield takeLatest(apparelActions.GET_APPARELS_REQUEST,\r\n    function* (evt) {\r\n      const action = apparelActions.getApparels;\r\n      try {\r\n        // const resp = yield call(services.getApparels, evt.payload);\r\n        const resp = yield call((data) => data, \"shakil is a good boy\");\r\n        if (resp) {\r\n          yield put(action.success({ data: resp }));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure());\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(getApparels),\r\n  ]);\r\n}\r\n","import qs from 'querystrings';\r\n// import { consoleLog, isEmptyObject } from '../helpers/utility';\r\nimport authHelpers from '../helpers/auth';\r\n\r\nexport const methodTypes = {\r\n  POST: 'POST',\r\n  GET: 'GET',\r\n  PUT: 'PUT',\r\n  DELETE: 'DELETE',\r\n};\r\n\r\nconst headers = {\r\n  'Content-Type': 'application/json',\r\n};\r\n\r\nexport const call = (methodType, url, data = {}, requireAuth = true) => {\r\n  if (requireAuth && !authHelpers.isLoggedIn()) {\r\n    throw 'Login required!';\r\n  }\r\n\r\n  if (requireAuth && authHelpers.isLoggedIn()) {\r\n    headers.Authorization = `Bearer ${authHelpers.getToken()}`;\r\n  }\r\n\r\n  const options = {\r\n    method: methodType,\r\n    headers,\r\n  };\r\n\r\n  // if (!isEmptyObject(data)) {\r\n    if (methodType === methodTypes.GET) {\r\n      // url = `${url}?${qs.stringify(data)}`;\r\n    } else {\r\n      options.body = JSON.stringify(data);\r\n    }\r\n  // }\r\n\r\n  // consoleLog(methodType, url, 'Options', options);\r\n\r\n  return new Promise((resolve, reject) => fetch(url, options)\r\n    .then(response => response.json())\r\n    .then(response => resolve(response))\r\n    .catch(error => reject(error)));\r\n};\r\n\r\n// export const uploadFile = (url, fileType, file) => {\r\n\r\n//   const options = {\r\n//     body: file,\r\n//     method: 'PUT',\r\n//     headers: {\r\n//       'Content-Type': fileType,\r\n//     }\r\n//   };\r\n//   return new Promise((resolve, reject) => {\r\n//     return fetch(url, options)\r\n//       .then(response => response.text())\r\n//       .then(response => resolve(response))\r\n//       .catch(error => reject(error));\r\n//   });\r\n// }\r\n\r\n// export const get = (url, data) => {\r\n//   if (authHelpers.isLoggedIn()) {\r\n//     headers.Authorization = 'Bearer ' + authHelpers.getToken();\r\n//   }\r\n\r\n//   const options = {\r\n//     method: methodTypes.GET,\r\n//     headers: headers\r\n//   };\r\n\r\n//   consoleLog('GET', url, \"Options\", options);\r\n\r\n//   const url_params = data ? `${url}?${qs.stringify(data)}` : url;\r\n\r\n//   return new Promise((resolve, reject) => {\r\n//     return fetch(url, options)\r\n//       .then(response => response.json())\r\n//       .then(response => resolve(response))\r\n//       .catch(error => reject(error));\r\n//   });\r\n// };\r\n\r\n// export const post = (url, data = {}) => {\r\n//   if (authHelpers.isLoggedIn()) {\r\n//     headers.Authorization = 'Bearer ' + authHelpers.getToken();\r\n//   }\r\n\r\n//   const options = {\r\n//     body: JSON.stringify(data),\r\n//     method: methodTypes.POST,\r\n//     headers: headers\r\n//   };\r\n\r\n//   consoleLog('POST', url, \"Options\", options);\r\n\r\n//   return new Promise((resolve, reject) => {\r\n//     return fetch(url, options)\r\n//       .then(response => response.json())\r\n//       .then(response => resolve(response))\r\n//       .catch(error => reject(error));\r\n//   });\r\n// };","import { methodTypes, call } from './api';\r\n// import { getBaseUrl, prefixes } from '../config';\r\n\r\nconst userService = 'https://costapibd.herokuapp.com';\r\n// const userService = 'http://127.0.0.1:8000';\r\n// const productService = getBaseUrl(prefixes.ProductPrefix);\r\n// const aaumUrl = getBaseUrl(ports.Aaum);\r\n// const srBaseUrl = getBaseUrl(ports.SR);\r\n// const userService = 'http://user.api-staging.aadi.xen.works/v1/auth/refresh';\r\n// const productService = 'http://product.api-staging.aadi.xen.works/v1';\r\n\r\n// const baseUrl = getBaseUrl();\r\n\r\nexport default {\r\n\r\n  // Auth\r\n  login: data => call(methodTypes.POST, `${userService}/oauth/token`, data, false),\r\n  register: data => call(methodTypes.POST, `${userService}/api/user`, data, false),\r\n  // // refreshToken: data => call(methodTypes.POST, `${userService}/auth/refresh`, data, false),\r\n  // refreshToken: data => call(methodTypes.GET, `${userService}/auth/refresh`),\r\n  // // sendOTP: data => call(methodTypes.GET, `${aaumUrl}/auth`, data),\r\n  // getNewUsers: pgn => call(methodTypes.GET, `${userService}/users?${formatPgn(pgn)}`),\r\n  // getNewUser: id => call(methodTypes.GET, `${userService}/users/${id}`),\r\n  // createNewUser: data => call(methodTypes.POST, `${userService}/users`, data),\r\n  // updateNewUser: (id, data) => call(methodTypes.PUT, `${userService}/users/${id}`, data),\r\n\r\n  //cost\r\n  getCosts: pgn => call(methodTypes.GET, `${userService}/api/costs?${formatPgn(pgn)}`),\r\n  createCost: data => call(methodTypes.POST, `${userService}/api/costs`, data, true),\r\n  getCost: id => call(methodTypes.GET, `${userService}/api/costs/${id}`,true),\r\n  updateCost: (id, data) => call(methodTypes.PUT, `${userService}/api/costs/${id}`, data),\r\n\r\n  //income\r\n  getIncomes: pgn => call(methodTypes.GET, `${userService}/api/incomes?${formatPgn(pgn)}`),\r\n  createIncome: data => call(methodTypes.POST, `${userService}/api/incomes`, data, true),\r\n  getIncome: id => call(methodTypes.GET, `${userService}/api/incomes/${id}`,true),\r\n  updateIncome: (id, data) => call(methodTypes.PUT, `${userService}/api/incomes/${id}`, data),\r\n\r\n  //assets\r\n  getAssets: pgn => call(methodTypes.GET, `${userService}/api/assets?${formatPgn(pgn)}`),\r\n  createAsset: data => call(methodTypes.POST, `${userService}/api/assets`, data, true),\r\n  getAsset: id => call(methodTypes.GET, `${userService}/api/assets/${id}`,true),\r\n  updateAsset: (id, data) => call(methodTypes.PUT, `${userService}/api/assets/${id}`, data),\r\n\r\n  //loan\r\n  getLoans: pgn => call(methodTypes.GET, `${userService}/api/loans?${formatPgn(pgn)}`),\r\n  createLoan: data => call(methodTypes.POST, `${userService}/api/loans`, data, true),\r\n  getLoan: id => call(methodTypes.GET, `${userService}/api/loans/${id}`,true),\r\n  updateLoan: (id, data) => call(methodTypes.PUT, `${userService}/api/loans/${id}`, data),\r\n\r\n};\r\n\r\nconst formatPgn = pgn => (pgn ? `per_page=${pgn.pageSize}&page=${pgn.current}`:'');\r\n","// import { isProductionEnv } from '../config';\r\n\r\nexport function timeDifference(givenTime) {\r\n  givenTime = new Date(givenTime);\r\n  const milliseconds = new Date().getTime() - givenTime.getTime();\r\n  const numberEnding = number => (number > 1 ? 's' : '');\r\n  const number = num => (num > 9 ? `${num}` : `0${num}`);\r\n  const getTime = () => {\r\n    let temp = Math.floor(milliseconds / 1000);\r\n    const years = Math.floor(temp / 31536000);\r\n    if (years) {\r\n      const month = number(givenTime.getUTCMonth() + 1);\r\n      const day = number(givenTime.getUTCDate());\r\n      const year = givenTime.getUTCFullYear() % 100;\r\n      return `${day}-${month}-${year}`;\r\n    }\r\n    const days = Math.floor((temp %= 31536000) / 86400);\r\n    if (days) {\r\n      if (days < 28) {\r\n        return `${days} day${numberEnding(days)}`;\r\n      }\r\n      const months = [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec',\r\n      ];\r\n      const month = months[givenTime.getUTCMonth()];\r\n      const day = number(givenTime.getUTCDate());\r\n      return `${day} ${month}`;\r\n    }\r\n    const hours = Math.floor((temp %= 86400) / 3600);\r\n    if (hours) {\r\n      return `${hours} hour${numberEnding(hours)} ago`;\r\n    }\r\n    const minutes = Math.floor((temp %= 3600) / 60);\r\n    if (minutes) {\r\n      return `${minutes} minute${numberEnding(minutes)} ago`;\r\n    }\r\n    return 'a few seconds ago';\r\n  };\r\n  return getTime();\r\n}\r\n\r\nexport const isEmail = (text) => {\r\n  if (!text) { return false; }\r\n  const emailRegex = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n\r\n  return emailRegex.test(text);\r\n};\r\n\r\nexport const isPhoneNumber = (text) => {\r\n  if (!text) { return false; }\r\n  const phnNumberRegex = new RegExp(/^((\\+88)?(01){1}[23456789]{1}(\\d){8})$/);\r\n\r\n  return phnNumberRegex.test(text);\r\n};\r\n\r\nexport const getFullPhoneNo = (text) => {\r\n  const phnNumberRegex = new RegExp(/^((01){1}[23456789]{1}(\\d){8})$/);\r\n\r\n  if (phnNumberRegex.test(text)) {\r\n    return `+88${text}`;\r\n  }\r\n\r\n  if (isPhoneNumber(text)) {\r\n    return text;\r\n  } return null;\r\n};\r\n\r\nexport function getTextType(text) {\r\n  if (isPhoneNumber(text)) {\r\n    return 'phoneNumber';\r\n  }\r\n\r\n  if (isEmail(text)) {\r\n    return 'email';\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function getErrorMessage(ex) {\r\n  // consoleErr('Error: ', ex);\r\n\r\n  switch (ex.status) {\r\n    case 500:\r\n      return 'Internal Server Error';\r\n    case 401:\r\n    case 403:\r\n      return 'Un authorized';\r\n    default:\r\n      return `Error: ${ex.message}`;\r\n  }\r\n}\r\n\r\nexport function to1stJan2001(hour, min = 0) {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  if (isNaN(hour)) {\r\n    const timeRegex = new RegExp(/^(((0?[1-9])|(1[0-2])):([0-5])([0-9])\\s(A|P|a|p)(M|m))$/);\r\n\r\n    if (timeRegex.test(hour)) {\r\n      if (timeRegex.test(hour)) {\r\n        const tokens = hour.split(/[\\s:]+/);\r\n        // eslint-disable-next-line radix\r\n        hour = parseInt(tokens[0]);\r\n        // eslint-disable-next-line radix\r\n        min = parseInt(tokens[1]);\r\n        if (hour === 12) {\r\n          if (tokens[2].toLowerCase() === 'am') { hour = 0; }\r\n        } else {\r\n          hour += tokens[2].toLowerCase() === 'am' && hour !== 12 ? 0 : 12;\r\n        }\r\n      } else { hour = 0; }\r\n    }\r\n  }\r\n  return new Date(2001, 0, 1, hour, min, 0, 0);\r\n}\r\n\r\nexport function isEmptyObject(map) {\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const key in map) {\r\n    if (map.hasOwnProperty(key)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// export function consoleLog() {\r\n//   if (!isProductionEnv()) {\r\n//     // eslint-disable-next-line no-console\r\n//   }\r\n// }\r\n\r\n// export function consoleErr() {\r\n//   if (!isProductionEnv()) {\r\n//     // eslint-disable-next-line no-console\r\n//     console.error(...arguments);\r\n//   }\r\n// }\r\n","  /* eslint-disable no-console */\r\n  import {\r\n    all, takeEvery, takeLatest, put, fork, call, delay,\r\n  } from 'redux-saga/effects';\r\n  import {\r\n    getToken, clearToken, decodeToken, setToken,\r\n  } from '../../helpers/auth';\r\n  import authActions from './actions';\r\n  import services from '../services';\r\n  import { getErrorMessage, isEmptyObject } from '../../helpers/utility';\r\n\r\n  export function* loginRequest() {\r\n    yield takeEvery(authActions.LOGIN_REQUEST,\r\n      function* (evt) {\r\n        const action = authActions.login;\r\n        try {\r\n          const resp = yield call(services.login, evt.payload);\r\n          if (!resp.error && resp.access_token) {\r\n            const { access_token } = resp;\r\n            const profile = decodeToken(access_token);\r\n            setToken(access_token);\r\n            yield put(action.success(access_token, profile));\r\n          } else {\r\n            yield put(action.failure(resp.error));\r\n          }\r\n        } catch (ex) {\r\n          yield put(action.failure([getErrorMessage(ex)]));\r\n        }\r\n      });\r\n  }\r\n\r\n  export function* registerRequest() {\r\n    yield takeEvery(authActions.REGISTER_REQUEST,\r\n      function* (evt) {\r\n        const action = authActions.register;\r\n        try {\r\n          const resp = yield call(services.register, evt.payload);\r\n          if (resp.error.length && resp.data) {\r\n            // const { access_token } = resp;\r\n            // const profile = decodeToken(access_token);\r\n            // setToken(access_token);\r\n            yield put(action.success(resp.data));\r\n          } else {\r\n            yield put(action.failure(resp.error));\r\n          }\r\n        } catch (ex) {\r\n          yield put(action.failure([getErrorMessage(ex)]));\r\n        }\r\n      });\r\n  }\r\n\r\n  export function* loginSuccess() {\r\n    yield takeLatest(authActions.LOGIN_SUCCESS, function* (payload) {\r\n      yield call(setToken, payload.token);\r\n      // yield delay(270000);\r\n\r\n      // yield put(authActions.refreshToken.request());\r\n    });\r\n  }\r\n\r\n  // export function* loginFailure() {\r\n  //   yield takeEvery(authActions.LOGIN_FAILURE, function* () {\r\n  //     yield call(clearToken);\r\n  //     yield put(authActions.logout.request());\r\n  //   });\r\n  // }\r\n\r\n  // export function* logout() {\r\n  //   yield takeEvery(authActions.LOGOUT, function* () {\r\n  //     yield call(clearToken);\r\n  //   });\r\n  // }\r\n\r\n  // export function* checkAuthorization() {\r\n  //   yield takeLatest(authActions.CHECK_AUTHORIZATION,\r\n  //     function* () {\r\n  //       const token = getToken();\r\n  //       if (token) {\r\n  //         const now = new Date().getTime() / 1000;\r\n  //         const profile = yield call(decodeToken, token);\r\n  //         console.log('Token Found. Will expire in ', profile.exp - now);\r\n\r\n  //         if (profile.exp - now <= 270) {\r\n  //           console.log('Refreshing...');\r\n\r\n  //           yield put(authActions.refreshToken.request());\r\n  //         } else {\r\n  //           console.log('No need to refresh...');\r\n\r\n  //           yield put(authActions.login.success(token, profile));\r\n  //         }\r\n  //       } else {\r\n  //         // No token found\r\n  //         console.log('No token Found. Login out....');\r\n  //         yield put(authActions.logout.request());\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // export function* refreshToken() {\r\n  //   yield takeEvery(authActions.REFRESH_TOKEN_REQUEST,\r\n  //     function* () {\r\n  //       const action = authActions.refreshToken;\r\n  //       const token = yield call(getToken);\r\n\r\n  //       try {\r\n  //         const resp = yield call(services.refreshToken, { token });\r\n  //         if (isEmptyObject(resp.errors) && resp.result) {\r\n  //           const { token } = resp.result;\r\n  //           const profile = decodeToken(token);\r\n  //           yield put(action.success(token, profile));\r\n  //         } else {\r\n  //           yield put(action.failure(resp.errors));\r\n  //         }\r\n  //       } catch (ex) {\r\n  //         yield put(action.failure([getErrorMessage(ex)]));\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // export function* refreshTokenSuccess() {\r\n  //   yield takeLatest(authActions.REFRESH_TOKEN_SUCCESS, function* (payload) {\r\n  //     yield call(setToken, payload.token);\r\n\r\n  //     yield delay(270000);\r\n\r\n  //     yield put(authActions.refreshToken.request());\r\n  //   });\r\n  // }\r\n\r\n  // export function* refreshTokenFailure() {\r\n  //   yield takeLatest(authActions.REFRESH_TOKEN_FAILURE, function* () {\r\n  //     yield call(yield clearToken);\r\n  //   });\r\n  // }\r\n\r\n  // export function* lockApp() {\r\n  //   yield takeLatest(authActions.LOCK_APP_REQUEST, function* () {\r\n  //     yield put(authActions.lockApp.success());\r\n  //   });\r\n  // }\r\n\r\n  // export function* sendOtp() {\r\n  //   yield takeLatest(authActions.SEND_OTP_REQUEST,\r\n  //     function* (evt) {\r\n  //       const action = authActions.sendOtp;\r\n  //       try {\r\n  //         const resp = yield call(services.sendOtp, evt.payload);\r\n  //         if (!resp.errors && resp.message === 'OTP_GENERATED') {\r\n  //           yield put(action.success(resp.result));\r\n  //         } else {\r\n  //           yield put(action.failure(resp.errors));\r\n  //         }\r\n  //       } catch (ex) {\r\n  //         yield put(action.failure([getErrorMessage(ex)]));\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  export default function* rootSaga() {\r\n    yield all([\r\n      // fork(checkAuthorization),\r\n      fork(loginRequest), \r\n      fork(registerRequest),\r\n      fork(loginSuccess),\r\n      // fork(loginFailure),\r\n      // fork(logout),\r\n      //   fork(sendOtp),\r\n      //   fork(refreshToken),\r\n      //   fork(refreshTokenSuccess),\r\n      //   fork(refreshTokenFailure),\r\n      //   fork(lockApp),\r\n    ]);\r\n  }\r\n","import {\r\n  all, takeEvery, takeLatest, put, fork, call,\r\n} from 'redux-saga/effects';\r\nimport costActions from './actions';\r\nimport services from '../services';\r\nimport { getErrorMessage, isEmptyObject } from '../../helpers/utility';\r\n\r\nexport function* getCosts() {\r\n  yield takeLatest(costActions.GET_COSTS_REQUEST,\r\n    function* (evt) {\r\n      const action = costActions.getCosts;\r\n      try {\r\n        const resp = yield call(services.getCosts, evt.payload);\r\n        if (resp.success) {\r\n          yield put(action.success({ data: resp.result }));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\nexport function* getCost() {\r\n  yield takeLatest(costActions.GET_COST_REQUEST,\r\n    function* (evt) {\r\n      const action = costActions.getCost;\r\n      const { id } = evt.payload;\r\n      try {\r\n        const resp = yield call(services.getCost, id);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport function* createCost() {\r\n  yield takeLatest(costActions.CREATE_COST_REQUEST,\r\n    function* (evt) {\r\n      const action = costActions.createCost;\r\n      try {\r\n        const resp = yield call(services.createCost, evt.payload);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport function* updateCost() {\r\n  yield takeEvery(costActions.UPDATE_COST_REQUEST,\r\n    function* (evt) {\r\n      const action = costActions.updateCost;\r\n      const { id, data } = evt.payload;\r\n      try {\r\n        const resp = yield call(services.updateCost, id, data);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(getCosts),\r\n    fork(getCost),\r\n    fork(updateCost),\r\n    fork(createCost),\r\n  ]);\r\n}\r\n","import {\r\n  all, takeEvery, takeLatest, put, fork, call,\r\n} from 'redux-saga/effects';\r\nimport assetActions from './actions';\r\nimport services from '../services';\r\nimport { getErrorMessage, isEmptyObject } from '../../helpers/utility';\r\n\r\nexport function* getAssets() {\r\n  yield takeLatest(assetActions.GET_ASSETS_REQUEST,\r\n    function* (evt) {\r\n      const action = assetActions.getAssets;\r\n      try {\r\n        const resp = yield call(services.getAssets, evt.payload);\r\n        if (resp.success) {\r\n          yield put(action.success({ data: resp.result }));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\nexport function* getAsset() {\r\n  yield takeLatest(assetActions.GET_ASSET_REQUEST,\r\n    function* (evt) {\r\n      const action = assetActions.getAsset;\r\n      const { id } = evt.payload;\r\n      try {\r\n        const resp = yield call(services.getAsset, id);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport function* createAsset() {\r\n  yield takeLatest(assetActions.CREATE_ASSET_REQUEST,\r\n    function* (evt) {\r\n      const action = assetActions.createAsset;\r\n      try {\r\n        const resp = yield call(services.createAsset, evt.payload);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport function* updateAsset() {\r\n  yield takeEvery(assetActions.UPDATE_ASSET_REQUEST,\r\n    function* (evt) {\r\n      const action = assetActions.updateAsset;\r\n      const { id, data } = evt.payload;\r\n      try {\r\n        const resp = yield call(services.updateAsset, id, data);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(getAssets),\r\n    fork(getAsset),\r\n    fork(updateAsset),\r\n    fork(createAsset),\r\n  ]);\r\n}\r\n","import {\r\n  all, takeEvery, takeLatest, put, fork, call,\r\n} from 'redux-saga/effects';\r\nimport loanActions from './actions';\r\nimport services from '../services';\r\nimport { getErrorMessage, isEmptyObject } from '../../helpers/utility';\r\n\r\nexport function* getLoans() {\r\n  yield takeLatest(loanActions.GET_LOANS_REQUEST,\r\n    function* (evt) {\r\n      const action = loanActions.getLoans;\r\n      try {\r\n        const resp = yield call(services.getLoans, evt.payload);\r\n        if (resp.success) {\r\n          yield put(action.success({ data: resp.result }));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\nexport function* getLoan() {\r\n  yield takeLatest(loanActions.GET_LOAN_REQUEST,\r\n    function* (evt) {\r\n      const action = loanActions.getLoan;\r\n      const { id } = evt.payload;\r\n      try {\r\n        const resp = yield call(services.getLoan, id);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport function* createLoan() {\r\n  yield takeLatest(loanActions.CREATE_LOAN_REQUEST,\r\n    function* (evt) {\r\n      const action = loanActions.createLoan;\r\n      try {\r\n        const resp = yield call(services.createLoan, evt.payload);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport function* updateLoan() {\r\n  yield takeEvery(loanActions.UPDATE_LOAN_REQUEST,\r\n    function* (evt) {\r\n      const action = loanActions.updateLoan;\r\n      const { id, data } = evt.payload;\r\n      try {\r\n        const resp = yield call(services.updateLoan, id, data);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(getLoans),\r\n    fork(getLoan),\r\n    fork(updateLoan),\r\n    fork(createLoan),\r\n  ]);\r\n}\r\n","import {\r\n  all, takeEvery, takeLatest, put, fork, call,\r\n} from 'redux-saga/effects';\r\nimport incomeActions from './actions';\r\nimport services from '../services';\r\nimport { getErrorMessage, isEmptyObject } from '../../helpers/utility';\r\n\r\nexport function* getIncomes() {\r\n  yield takeLatest(incomeActions.GET_INCOMES_REQUEST,\r\n    function* (evt) {\r\n      const action = incomeActions.getIncomes;\r\n      try {\r\n        const resp = yield call(services.getIncomes, evt.payload);\r\n        if (resp.success) {\r\n          yield put(action.success({ data: resp.result }));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\nexport function* getIncome() {\r\n  yield takeLatest(incomeActions.GET_INCOME_REQUEST,\r\n    function* (evt) {\r\n      const action = incomeActions.getIncome;\r\n      const { id } = evt.payload;\r\n      try {\r\n        const resp = yield call(services.getIncome, id);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport function* createIncome() {\r\n  yield takeLatest(incomeActions.CREATE_INCOME_REQUEST,\r\n    function* (evt) {\r\n      const action = incomeActions.createIncome;\r\n      try {\r\n        const resp = yield call(services.createIncome, evt.payload);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport function* updateIncome() {\r\n  yield takeEvery(incomeActions.UPDATE_INCOME_REQUEST,\r\n    function* (evt) {\r\n      const action = incomeActions.updateIncome;\r\n      const { id, data } = evt.payload;\r\n      try {\r\n        const resp = yield call(services.updateIncome, id, data);\r\n        if (resp.success) {\r\n          yield put(action.success(resp.result));\r\n        } else {\r\n          yield put(action.failure(resp.errors));\r\n        }\r\n      } catch (ex) {\r\n        yield put(action.failure([getErrorMessage(ex)]));\r\n      }\r\n    });\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(getIncomes),\r\n    fork(getIncome),\r\n    fork(updateIncome),\r\n    fork(createIncome),\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport practiceSagas from './practice/saga';\r\nimport authSagas from './auth/saga';\r\nimport costSagas from './cost/saga';\r\nimport assetSagas from './asset/saga';\r\nimport loanSagas from './loan/saga';\r\nimport incomeSagas from './income/saga';\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    practiceSagas(),\r\n    authSagas(),\r\n    costSagas(),\r\n    assetSagas(),\r\n    loanSagas(),\r\n    incomeSagas(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from '../redux/reducers';\r\nimport rootSaga from '../redux/sagas';\r\n// import middlewares from './middlewares'\r\n\r\n// import { updateTheme } from './themes/middleware';\r\n\r\n// import { persistedState, saveState } from './persisted.store';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  combineReducers({ ...reducers }),\r\n  // persistedState, // second argument overrides the initial state\r\n  applyMiddleware(\r\n    // ...middlewares,\r\n    sagaMiddleware,\r\n  )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n// add a listener that will be invoked on any state change\r\n// store.subscribe(() => {\r\n//   saveState(store.getState());\r\n// });\r\n\r\n// Update the initial theme\r\n// updateTheme(store.getState())\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => (\r\n    <Route {...rest} component={(props) => (\r\n      isAuthenticated ? (\r\n        <Redirect to=\"/dashboard\" />\r\n      ) : (\r\n          <Component {...props} />\r\n        )\r\n    )} />\r\n  );\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // isAuthenticated: !!state.auth.uid\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n// import Header from '../components/general/Header';\r\nimport {\r\n    getToken, clearToken, decodeToken, setToken,\r\n} from '../helpers/auth';\r\n\r\nconst check=()=>{\r\n    const token= getToken();\r\n    return !!token\r\n}\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => (\r\n    <Route {...rest} component={(props) => (\r\n        check() ? (\r\n        <div>\r\n            {/*<Header/>*/}\r\n          <Component {...props} />\r\n        </div>\r\n      ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n    )} />\r\n  );\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: !!state.auth.uid\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PrivateRoute);\r\nexport default PrivateRoute;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/auth/actions';\r\n// import axios from 'axios';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Layout, Menu, Breadcrumb, Row, Col } from 'antd';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoggedIn: props.isLoggedIn,\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    const update = {};\r\n    // if (props.isLoading !== state.isLoading) {\r\n    //   update.isLoading = props.isLoading;\r\n    // }\r\n    update.isLoggedIn = props.isLoggedIn;\r\n\r\n    if (props.isLoggedIn && !state.isLoggedIn) {\r\n      props.history.push('/');\r\n    }\r\n    return update;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    const data = {\r\n      username: e.username,\r\n      password: e.password,\r\n      grant_type: \"password\",\r\n      client_id: \"11\",\r\n      client_secret: \"ViLhWdE0DHVMZGvx0IpH7Gd78SgrQWyFvXbnqzHC\",\r\n      // client_id: \"2\",\r\n      // client_secret: \"ME4jOIZJRHgN0vCUwPrBU0Y55ehy9yShtLP5Pqvb\",\r\n    }\r\n    this.props.login(data);\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n      <Row>\r\n      <Col span={8}></Col>\r\n      <Col span={8}>\r\n      <h1>Login</h1>\r\n\r\n      <Form\r\n      name=\"normal_login\"\r\n      className=\"login-form\"\r\n      initialValues={{ remember: true }}\r\n      onFinish={this.handleSubmit}\r\n    >\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[{ required: true, message: 'Please input your Username!' }]}\r\n      >\r\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[{ required: true, message: 'Please input your Password!' }]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <a className=\"login-form-forgot\" href=\"\">\r\n          Forgot password\r\n        </a>\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Log in\r\n        </Button>\r\n        Or <a href=\"/register\">register now!</a>\r\n      </Form.Item>\r\n    </Form>\r\n      </Col>\r\n      </Row>\r\n    </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    // isLoading: state.newUser.isLoading,\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n  }),\r\n  { login: actions.login.request },\r\n)(Login);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/auth/actions';\r\n// import axios from 'axios';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Layout, Menu, Breadcrumb, Row, Col } from 'antd';\r\nimport './register.scss'\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isRegistered: props.isRegistered,\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\",props);\r\n    console.log(\"state\",state);\r\n    const update = {};\r\n    // if (props.isLoading !== state.isLoading) {\r\n    //   update.isLoading = props.isLoading;\r\n    // }\r\n    update.isRegistered = props.isRegistered;\r\n\r\n    if (props.isRegistered && !state.isRegistered) {\r\n      props.history.push('/');\r\n    }\r\n    return update;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (value) => {\r\n    // const data = {\r\n    //   name: e.name,\r\n    //   email: e.email,\r\n    //   password: e.password,\r\n    //   // grant_type: \"password\",\r\n    //   // client_id: \"11\",\r\n    //   // client_secret: \"ViLhWdE0DHVMZGvx0IpH7Gd78SgrQWyFvXbnqzHC\",\r\n    // }\r\n    this.props.register(value);\r\n  }\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Row>\r\n          <Col span={8}></Col>\r\n          <Col span={8}>\r\n            <br />\r\n            <Form\r\n              name=\"normal_login\"\r\n              className=\"login-form\"\r\n              initialValues={{ remember: true }}\r\n              onFinish={this.handleSubmit}\r\n              {...formItemLayout}\r\n            >\r\n              <Form.Item\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                rules={[{ required: true, message: 'Please input your name!' }]}\r\n              >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Name\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                rules={[{ required: true, message: 'Please input your Username!' }]}\r\n              >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"email\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[{ required: true, message: 'Please input your Password!' }]}\r\n              >\r\n                <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} />\r\n\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Button style={{marginLeft:100}} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                  Register\r\n        </Button>\r\n        Or <a style={{marginLeft:100}} href=\"/login\">Log in!</a>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    // isLoading: state.newUser.isLoading,\r\n    isRegistered: state.auth.isRegistered,\r\n  }),\r\n  { register: actions.register.request },\r\n)(Login);","const data = [\r\n  {\r\n    key: \"10\",\r\n    title: \"Cost\",\r\n    link: \"/cost\",\r\n  },\r\n  {\r\n    key: \"11\",\r\n    title: \"Asset\",\r\n    link: \"/asset\",\r\n  },\r\n  {\r\n    key: \"12\",\r\n    title: \"Loan\",\r\n    link: \"/loan\",\r\n  },\r\n  {\r\n    key: \"13\",\r\n    title: \"Income\",\r\n    link: \"/income\",\r\n  }\r\n]\r\n\r\nexport default data;","import React, { Component } from 'react'\r\nimport { Menu } from 'antd';\r\nimport { clearToken } from '../helpers/auth';\r\nimport { withRouter } from 'react-router-dom';\r\nimport menu from './menu';\r\n\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nimport data from './menu';\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nclass nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currrentKey:[ '1'],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = window.location.pathname;\r\n    let u = data;\r\n    // const currrentMenu = data.find(item => item.link === url);\r\n\r\n    // this.setState({ currrentKey: [currrentMenu.key] });\r\n\r\n  }\r\n\r\n  handleClick = (link) => {\r\n    this.props.history.push(link);\r\n  }\r\n\r\n  render() {\r\n    const { currrentKey } = this.state;\r\n    return (\r\n      <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n        {/* <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n          Option 1\r\n        </Menu.Item> */}\r\n\r\n        {data.map(item =>\r\n          <Menu.Item onClick={() => this.handleClick(item.link)} key={item.key} icon={<PieChartOutlined />}>\r\n            {item.title}\r\n          </Menu.Item>\r\n        )}\r\n\r\n\r\n        {/* <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Cost\">\r\n          <Menu.Item key=\"3\" onClick={() => { this.props.history.push('/cost/create') }}>New</Menu.Item>\r\n          <Menu.Item key=\"4\" onClick={() => { this.props.history.push('/cost') }}>List</Menu.Item>\r\n\r\n          <Menu.Item key=\"5\">Alex</Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\r\n          <Menu.Item key=\"6\">Team 1</Menu.Item>\r\n          <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n        </SubMenu> */}\r\n        <Menu.Item key=\"9\" icon={<TeamOutlined />} onClick={() => { clearToken(); this.props.history.push('/login') }}> logout </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(nav);","import React from 'react';\r\nimport { Layout, Breadcrumb, Space, Spin, Skeleton } from 'antd';\r\nimport './home.scss';\r\nimport Nav from './nav'\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SiderDemo extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, isCreating, isUpdating, title, subtitle, buttons } = this.props;\r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n          <div className=\"logo\" style={{ color: 'white' }}> Cost App </div>\r\n          <Nav history={this.props.history} />\r\n        </Sider>\r\n        <Layout className=\"site-layout\">\r\n          <Header className=\"site-layout-background\" style={{ padding: 0 }} />\r\n          <Content style={{ margin: '0 16px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n              <Breadcrumb.Item>{title}</Breadcrumb.Item>\r\n              <Breadcrumb.Item>{subtitle}</Breadcrumb.Item>\r\n              {buttons}\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n              {isLoading && <Skeleton />}\r\n              {(isUpdating||isCreating) && <Space size=\"middle\">\r\n               \r\n              <div style={{ textAlign: \"center\", marginLeft:500, marginTop:100}}>\r\n              <Spin size=\"large\" />\r\n              </div>\r\n              </Space>}\r\n              {!isLoading && !isUpdating && !isCreating && this.props.children}\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SiderDemo;","import React, { Component } from 'react'\r\nimport Base from '../../components/base';\r\nexport default class index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Base >\r\n      hello there\r\n      </Base>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, InputNumber, Button, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 3 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nclass form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"shakil\",\r\n      count: 1,\r\n    }\r\n  }\r\n\r\n  onFinish = values => {\r\n    const { onSubmit } = this.props;\r\n\r\n    values.date = values.date.format('YYYY-MM-DD');\r\n    onSubmit(values);\r\n  };\r\n  nameChange = (e) => {\r\n    const { value } = e.target;\r\n    let { count } = this.state\r\n    this.setState({ name: value + count, count: count + 1 });\r\n  }\r\n  render() {\r\n    const { cost } = this.props;\r\n    const { name, value, details, date } = cost || '';\r\n    // const { name } = this.state;\r\n\r\n    const field = (data) => {\r\n      const obj = [];\r\n      const name = data && Object.keys(data);\r\n      name && name.map(item => data[item] && obj.push({ name: [item], value: data[item] }))\r\n      console.log(obj)\r\n      return obj\r\n    }\r\n\r\n    // const fields = [\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"name\"\r\n    //     ],\r\n    //     \"value\": name,\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"details\"\r\n    //     ],\r\n    //     \"value\": details,\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"value\"\r\n    //     ],\r\n    //     \"value\": value && parseFloat(value),\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"date\"\r\n    //     ],\r\n    //     \"value\": date && moment(date,'YYYY-MM-DD'),\r\n    //   }\r\n    // ]\r\n    return (\r\n      <Form  {...layout} fields={field({ name, value: value && parseFloat(value), details, date: date && moment(date, 'YYYY-MM-DD') })} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n        <Form.Item name={'name'} label=\"Name\" rules={[{ required: true }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'details'} label=\"Details\" rules={[{ required: true }]} value={'here is  a descrition'}>\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"date\" label=\"DatePicker\" rules={[{ required: true }]} >\r\n          <DatePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'value'} label=\"Value\" rules={[{ required: true, type: 'number', min: 0 }]} >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default form;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message, Button, Space } from 'antd';\r\nimport Form from './form2';\r\nimport Base from '../../components/base';\r\nimport costActions from '../../redux/cost/actions';\r\n\r\n\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      isCreated:props.isCreated,\r\n     }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\",props)\r\n    console.log(\"stay\",state)\r\n    const update = {};\r\n    // if (props.isLoading !== state.isLoading) {\r\n    //   update.isLoading = props.isLoading;\r\n    // }\r\n    update.isCreated = props.isCreated;\r\n\r\n    if (props.isCreated && !state.isCreated) {\r\n      message.success('This is a success message');\r\n      props.history.push('/cost');\r\n\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit=(data)=>{\r\n    const { createCost } = this.props;\r\n    createCost(data);\r\n  }\r\n  \r\n  render() { \r\n    const { isCreating } = this.props;\r\n    return ( \r\n      <Base title=\"Cost\" subtitle=\"Create\" isLoading={isCreating} >\r\n      <Form onSubmit={this.onSubmit}/>\r\n      </Base>\r\n     );\r\n  }\r\n}\r\n \r\nexport default connect(\r\n  state => ({\r\n    isCreating: state.cost.isCreating,\r\n    isCreated: state.cost.isCreated,\r\n  }),\r\n  { createCost: costActions.createCost.request },\r\n)(create);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message, Button, Space, Spin, Skeleton } from 'antd';\r\nimport Form from './form2';\r\nimport Base from '../../components/base';\r\nimport costActions from '../../redux/cost/actions';\r\n\r\n\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isUpdated: props.isUpdated,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match, getCost,\r\n    } = this.props;\r\n    const { id } = match.params;\r\n    getCost({ id });\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\", props)\r\n    console.log(\"stay\", state)\r\n    const {\r\n      match,\r\n    } = props;\r\n    const { id } = match.params;\r\n    const update = {};\r\n    // if (props.isLoading !== state.isLoading) {\r\n    //   update.isLoading = props.isLoading;\r\n    // }\r\n    if (props.cost && props.cost.id == id) {\r\n      update.cost = props.cost;\r\n    }\r\n    update.isUpdated = props.isUpdated;\r\n\r\n    if (props.isUpdated && !state.isUpdated) {\r\n      message.success('This is a success message');\r\n      props.history.push('/cost');\r\n\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit = (data) => {\r\n    const { updateCost, match } = this.props;\r\n    const { id } = match.params;\r\n    updateCost({ id, data });\r\n  }\r\n\r\n  render() {\r\n    const { cost } = this.state;\r\n    const { isLoading, isUpdating } = this.props;\r\n\r\n    return (\r\n      <Base title=\"Cost\" subtitle=\"Edit\" isLoading={isLoading} isUpdating={isUpdating} >\r\n        {cost && <Form cost={cost} onSubmit={this.onSubmit} isLoading={isLoading} isUpdating={isUpdating} />}\r\n      </Base>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    // isLoading: state.newUser.isLoading,\r\n    isUpdated: state.cost.isUpdated,\r\n    isUpdating: state.cost.isUpdating,\r\n    isLoading: state.cost.isLoading,\r\n    cost: state.cost.cost,\r\n  }),\r\n  {\r\n    updateCost: costActions.updateCost.request,\r\n    getCost: costActions.getCost.request,\r\n  },\r\n)(create);\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, InputNumber, Button, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 3 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nclass form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  onFinish = values => {\r\n    const { onSubmit } = this.props;\r\n    \r\n    values.date = values.date.format('YYYY-MM-DD');\r\n    onSubmit(values);\r\n  };\r\n  render() {\r\n    const { cost } = this.props;\r\n    const { name, value, details, date } = cost || '';\r\n    return (\r\n      <Form  {...layout} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n        <Form.Item name={'name'} label=\"Name\" rules={[{ required: true }]} initialValue={name}>\r\n          <Input  />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'details'} label=\"Details\" rules={[{ required: true }]} initialValue={details}>\r\n          <Input.TextArea value={'here is  a descrition'} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"date\" label=\"DatePicker\" rules={[{ required: true }]} initialValue={date && moment(date,'YYYY-MM-DD')}>\r\n          <DatePicker  />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'value'} label=\"Value\" rules={[{ required: true, type: 'number', min: 0 }]} initialValue={value && parseFloat(value)}>\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default form;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message, Button, Table } from 'antd';\r\nimport Form from './form';\r\nimport Base from '../../components/base';\r\nimport costActions from '../../redux/cost/actions';\r\nimport {\r\n  PlusCircleTwoTone,\r\n} from '@ant-design/icons';\r\n\r\nconst defaultPagination = {\r\n  current: 1,\r\n  pageSize: 10,\r\n};\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: props.isLoading,\r\n      pagination: defaultPagination,\r\n\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { getCosts } = this.props;\r\n    getCosts(defaultPagination)\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\", props)\r\n    console.log(\"stay\", state)\r\n    const update = {};\r\n\r\n    if (props.isLoading !== state.isLoading) {\r\n      update.isLoading = props.isLoading;\r\n    }\r\n\r\n    if (props.costs) {\r\n      update.costs = props.costs;\r\n      update.pagination = {\r\n        current: props.costs.data.current_page,\r\n        pageSize: props.costs.data.per_page,\r\n        total: props.costs.data.total,\r\n      };\r\n    }\r\n    update.isCreated = props.isCreated;\r\n\r\n    if (props.isCreated && !state.isCreated) {\r\n      // props.history.push('/');\r\n      message.success('This is a success message');\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit = (data) => {\r\n    const { createCost } = this.props;\r\n    createCost(data);\r\n  }\r\n\r\n  handleRefresh = (page) => {\r\n    const { pagination } = this.state;\r\n    const { getCosts } = this.props;\r\n    pagination.current = page.current;\r\n    pagination.pageSize = page.pageSize;\r\n    this.setState({\r\n      pagination,\r\n    });\r\n    getCosts(page);\r\n  }\r\n\r\n  render() {\r\n    const { costs, pagination, isLoading } = this.state;\r\n\r\n    const buttons = (<Button onClick={()=>this.props.history.push(\"cost/create\")} icon={<PlusCircleTwoTone />} type=\"primary\" style={{ float: \"right\" }} >New</Button>)\r\n    const columns = [\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Amount',\r\n        dataIndex: 'value',\r\n        key: 'value',\r\n      },\r\n      {\r\n        title: 'Details',\r\n        dataIndex: 'details',\r\n        key: 'details',\r\n        responsive: ['md'],\r\n      },\r\n      {\r\n        title: 'Date',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        responsive: ['md'],\r\n      },\r\n      {\r\n        title: 'Action',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        render: id => <Button type=\"primary\" onClick={() => this.props.history.push(`/cost/${id}`)}>Edit</Button>,\r\n\r\n      },\r\n    ];\r\n\r\n    const tableProps = {\r\n      dataSource: costs && costs.data && costs.data.data && costs.data.data,\r\n      pagination,\r\n      loading: isLoading,\r\n      onChange: (page) => {\r\n        this.handleRefresh(page);\r\n      },\r\n      columns,\r\n    };\r\n    return (\r\n      <Base buttons={buttons} title=\"Cost\" subtitle=\"List\" >\r\n        <Table {...tableProps} />\r\n      </Base >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    isLoading: state.cost.isLoading,\r\n    costs: state.cost.costs,\r\n  }),\r\n  { getCosts: costActions.getCosts.request },\r\n)(create);\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, InputNumber, Button, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 3 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nclass form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"shakil\",\r\n      count: 1,\r\n    }\r\n  }\r\n\r\n  onFinish = values => {\r\n    const { onSubmit } = this.props;\r\n\r\n    values.date = values.date.format('YYYY-MM-DD');\r\n    onSubmit(values);\r\n  };\r\n  nameChange = (e) => {\r\n    const { value } = e.target;\r\n    let { count } = this.state\r\n    this.setState({ name: value + count, count: count + 1 });\r\n  }\r\n  render() {\r\n    const { loan } = this.props;\r\n    const { name, value, details, date } = loan || '';\r\n    // const { name } = this.state;\r\n\r\n    const field = (data) => {\r\n      const obj = [];\r\n      const name = data && Object.keys(data);\r\n      name && name.map(item => data[item] && obj.push({ name: [item], value: data[item] }))\r\n      console.log(obj)\r\n      return obj\r\n    }\r\n\r\n    // const fields = [\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"name\"\r\n    //     ],\r\n    //     \"value\": name,\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"details\"\r\n    //     ],\r\n    //     \"value\": details,\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"value\"\r\n    //     ],\r\n    //     \"value\": value && parseFloat(value),\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"date\"\r\n    //     ],\r\n    //     \"value\": date && moment(date,'YYYY-MM-DD'),\r\n    //   }\r\n    // ]\r\n    return (\r\n      <Form  {...layout} fields={field({ name, value: value && parseFloat(value), details, date: date && moment(date, 'YYYY-MM-DD') })} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n        <Form.Item name={'name'} label=\"Name\" rules={[{ required: true }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'details'} label=\"Details\" rules={[{ required: true }]} value={'here is  a descrition'}>\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"date\" label=\"DatePicker\" rules={[{ required: true }]} >\r\n          <DatePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'value'} label=\"Value\" rules={[{ required: true, type: 'number', min: 0 }]} >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default form;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message, Button, Space } from 'antd';\r\nimport Form from './form2';\r\nimport Base from '../../components/base';\r\nimport loanActions from '../../redux/loan/actions';\r\n\r\n\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      isCreated:props.isCreated,\r\n     }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\",props)\r\n    console.log(\"stay\",state)\r\n    const update = {};\r\n    // if (props.isLoading !== state.isLoading) {\r\n    //   update.isLoading = props.isLoading;\r\n    // }\r\n    update.isCreated = props.isCreated;\r\n\r\n    if (props.isCreated && !state.isCreated) {\r\n      message.success('This is a success message');\r\n      props.history.push('/loan');\r\n\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit=(data)=>{\r\n    const { createLoan } = this.props;\r\n    createLoan(data);\r\n  }\r\n  \r\n  render() { \r\n    const { isCreating } = this.props;\r\n    return ( \r\n      <Base title=\"Loan\" subtitle=\"Create\" isLoading={isCreating} >\r\n      <Form onSubmit={this.onSubmit}/>\r\n      </Base>\r\n     );\r\n  }\r\n}\r\n \r\nexport default connect(\r\n  state => ({\r\n    isCreating: state.loan.isCreating,\r\n    isCreated: state.loan.isCreated,\r\n  }),\r\n  { createLoan: loanActions.createLoan.request },\r\n)(create);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message, Button, Space, Spin, Skeleton } from 'antd';\r\nimport Form from './form2';\r\nimport Base from '../../components/base';\r\nimport loanActions from '../../redux/loan/actions';\r\n\r\n\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isUpdated: props.isUpdated,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match, getLoan,\r\n    } = this.props;\r\n    const { id } = match.params;\r\n    getLoan({ id });\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\", props)\r\n    console.log(\"stay\", state)\r\n    const {\r\n      match,\r\n    } = props;\r\n    const { id } = match.params;\r\n    const update = {};\r\n    // if (props.isLoading !== state.isLoading) {\r\n    //   update.isLoading = props.isLoading;\r\n    // }\r\n    if (props.loan && props.loan.id == id) {\r\n      update.loan = props.loan;\r\n    }\r\n    update.isUpdated = props.isUpdated;\r\n\r\n    if (props.isUpdated && !state.isUpdated) {\r\n      message.success('This is a success message');\r\n      props.history.push('/loan');\r\n\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit = (data) => {\r\n    const { updateLoan, match } = this.props;\r\n    const { id } = match.params;\r\n    updateLoan({ id, data });\r\n  }\r\n\r\n  render() {\r\n    const { loan } = this.state;\r\n    const { isLoading, isUpdating } = this.props;\r\n\r\n    return (\r\n      <Base title=\"Loan\" subtitle=\"Edit\" isLoading={isLoading} isUpdating={isUpdating} >\r\n        {loan && <Form loan={loan} onSubmit={this.onSubmit} isLoading={isLoading} isUpdating={isUpdating} />}\r\n      </Base>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    // isLoading: state.newUser.isLoading,\r\n    isUpdated: state.loan.isUpdated,\r\n    isUpdating: state.loan.isUpdating,\r\n    isLoading: state.loan.isLoading,\r\n    loan: state.loan.loan,\r\n  }),\r\n  {\r\n    updateLoan: loanActions.updateLoan.request,\r\n    getLoan: loanActions.getLoan.request,\r\n  },\r\n)(create);\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, InputNumber, Button, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 3 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nclass form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  onFinish = values => {\r\n    const { onSubmit } = this.props;\r\n    \r\n    values.date = values.date.format('YYYY-MM-DD');\r\n    onSubmit(values);\r\n  };\r\n  render() {\r\n    const { cost } = this.props;\r\n    const { name, value, details, date } = cost || '';\r\n    return (\r\n      <Form  {...layout} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n        <Form.Item name={'name'} label=\"Name\" rules={[{ required: true }]} initialValue={name}>\r\n          <Input  />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'details'} label=\"Details\" rules={[{ required: true }]} initialValue={details}>\r\n          <Input.TextArea value={'here is  a descrition'} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"date\" label=\"DatePicker\" rules={[{ required: true }]} initialValue={date && moment(date,'YYYY-MM-DD')}>\r\n          <DatePicker  />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'value'} label=\"Value\" rules={[{ required: true, type: 'number', min: 0 }]} initialValue={value && parseFloat(value)}>\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default form;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message, Button, Table } from 'antd';\r\nimport Form from './form';\r\nimport Base from '../../components/base';\r\nimport loanActions from '../../redux/loan/actions';\r\nimport {\r\n  PlusCircleTwoTone,\r\n} from '@ant-design/icons';\r\n\r\nconst defaultPagination = {\r\n  current: 1,\r\n  pageSize: 10,\r\n};\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: props.isLoading,\r\n      pagination: defaultPagination,\r\n\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { getLoans } = this.props;\r\n    getLoans(defaultPagination)\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\", props)\r\n    console.log(\"stay\", state)\r\n    const update = {};\r\n\r\n    if (props.isLoading !== state.isLoading) {\r\n      update.isLoading = props.isLoading;\r\n    }\r\n\r\n    if (props.loans) {\r\n      update.loans = props.loans;\r\n      update.pagination = {\r\n        current: props.loans.data.current_page,\r\n        pageSize: props.loans.data.per_page,\r\n        total: props.loans.data.total,\r\n      };\r\n    }\r\n    update.isCreated = props.isCreated;\r\n\r\n    if (props.isCreated && !state.isCreated) {\r\n      // props.history.push('/');\r\n      message.success('This is a success message');\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit = (data) => {\r\n    const { createLoan } = this.props;\r\n    createLoan(data);\r\n  }\r\n\r\n  handleRefresh = (page) => {\r\n    const { pagination } = this.state;\r\n    const { getLoans } = this.props;\r\n    pagination.current = page.current;\r\n    pagination.pageSize = page.pageSize;\r\n    this.setState({\r\n      pagination,\r\n    });\r\n    getLoans(page);\r\n  }\r\n\r\n  render() {\r\n    const { loans, pagination, isLoading } = this.state;\r\n\r\n    const buttons = (<Button onClick={()=>this.props.history.push(\"loan/create\")} icon={<PlusCircleTwoTone />} type=\"primary\" style={{ float: \"right\" }} >New</Button>)\r\n    const columns = [\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Amount',\r\n        dataIndex: 'value',\r\n        key: 'value',\r\n      },\r\n      {\r\n        title: 'Details',\r\n        dataIndex: 'details',\r\n        key: 'details',\r\n        responsive: ['md'],\r\n      },\r\n      {\r\n        title: 'Date',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        responsive: ['md'],\r\n      },\r\n      {\r\n        title: 'Action',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        render: id => <Button type=\"primary\" onClick={() => this.props.history.push(`/loan/${id}`)}>Edit</Button>,\r\n\r\n      },\r\n    ];\r\n\r\n    const tableProps = {\r\n      dataSource: loans && loans.data && loans.data.data && loans.data.data,\r\n      pagination,\r\n      loading: isLoading,\r\n      onChange: (page) => {\r\n        this.handleRefresh(page);\r\n      },\r\n      columns,\r\n    };\r\n    return (\r\n      <Base buttons={buttons} title=\"Loan\" subtitle=\"List\" >\r\n        <Table {...tableProps} />\r\n      </Base >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    isLoading: state.loan.isLoading,\r\n    loans: state.loan.loans,\r\n  }),\r\n  { getLoans: loanActions.getLoans.request },\r\n)(create);\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, InputNumber, Button, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 3 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nclass form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  onFinish = values => {\r\n    const { onSubmit } = this.props;\r\n    \r\n    values.date = values.date.format('YYYY-MM-DD');\r\n    onSubmit(values);\r\n  };\r\n  render() {\r\n    const { cost } = this.props;\r\n    const { name, value, details, date } = cost || '';\r\n    return (\r\n      <Form  {...layout} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n        <Form.Item name={'name'} label=\"Name\" rules={[{ required: true }]} initialValue={name}>\r\n          <Input  />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'details'} label=\"Details\" rules={[{ required: true }]} initialValue={details}>\r\n          <Input.TextArea value={'here is  a descrition'} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"date\" label=\"DatePicker\" rules={[{ required: true }]} initialValue={date && moment(date,'YYYY-MM-DD')}>\r\n          <DatePicker  />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'value'} label=\"Value\" rules={[{ required: true, type: 'number', min: 0 }]} initialValue={value && parseFloat(value)}>\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default form;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message, Button, Table } from 'antd';\r\nimport Form from './form';\r\nimport Base from '../../components/base';\r\nimport assetActions from '../../redux/asset/actions';\r\nimport {\r\n  PlusCircleTwoTone,\r\n} from '@ant-design/icons';\r\n\r\nconst defaultPagination = {\r\n  current: 1,\r\n  pageSize: 10,\r\n};\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: props.isLoading,\r\n      pagination: defaultPagination,\r\n\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { getAssets } = this.props;\r\n    getAssets(defaultPagination)\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\", props)\r\n    console.log(\"stay\", state)\r\n    const update = {};\r\n\r\n    if (props.isLoading !== state.isLoading) {\r\n      update.isLoading = props.isLoading;\r\n    }\r\n\r\n    if (props.assets) {\r\n      update.assets = props.assets;\r\n      update.pagination = {\r\n        current: props.assets.data.current_page,\r\n        pageSize: props.assets.data.per_page,\r\n        total: props.assets.data.total,\r\n      };\r\n    }\r\n    update.isCreated = props.isCreated;\r\n\r\n    if (props.isCreated && !state.isCreated) {\r\n      // props.history.push('/');\r\n      message.success('This is a success message');\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit = (data) => {\r\n    const { createAsset } = this.props;\r\n    createAsset(data);\r\n  }\r\n\r\n  handleRefresh = (page) => {\r\n    const { pagination } = this.state;\r\n    const { getAssets } = this.props;\r\n    pagination.current = page.current;\r\n    pagination.pageSize = page.pageSize;\r\n    this.setState({\r\n      pagination,\r\n    });\r\n    getAssets(page);\r\n  }\r\n\r\n  render() {\r\n    const { assets, pagination, isLoading } = this.state;\r\n\r\n    const buttons = (<Button onClick={()=>this.props.history.push(\"asset/create\")} icon={<PlusCircleTwoTone />} type=\"primary\" style={{ float: \"right\" }} >New</Button>)\r\n    const columns = [\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Amount',\r\n        dataIndex: 'value',\r\n        key: 'value',\r\n      },\r\n      {\r\n        title: 'Details',\r\n        dataIndex: 'details',\r\n        key: 'details',\r\n        responsive: ['md'],\r\n      },\r\n      {\r\n        title: 'Date',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        responsive: ['md'],\r\n      },\r\n      {\r\n        title: 'Action',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        render: id => <Button type=\"primary\" onClick={() => this.props.history.push(`/asset/${id}`)}>Edit</Button>,\r\n\r\n      },\r\n    ];\r\n\r\n    const tableProps = {\r\n      dataSource: assets && assets.data && assets.data.data && assets.data.data,\r\n      pagination,\r\n      loading: isLoading,\r\n      onChange: (page) => {\r\n        this.handleRefresh(page);\r\n      },\r\n      columns,\r\n    };\r\n    return (\r\n      <Base buttons={buttons} title=\"Asset\" subtitle=\"List\" >\r\n        <Table {...tableProps} />\r\n      </Base >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    isLoading: state.asset.isLoading,\r\n    assets: state.asset.assets,\r\n  }),\r\n  { getAssets: assetActions.getAssets.request },\r\n)(create);\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, InputNumber, Button, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\nimport asset from '.';\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 3 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nclass form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"shakil\",\r\n      count: 1,\r\n    }\r\n  }\r\n\r\n  onFinish = values => {\r\n    const { onSubmit } = this.props;\r\n\r\n    values.date = values.date.format('YYYY-MM-DD');\r\n    onSubmit(values);\r\n  };\r\n  nameChange = (e) => {\r\n    const { value } = e.target;\r\n    let { count } = this.state\r\n    this.setState({ name: value + count, count: count + 1 });\r\n  }\r\n  render() {\r\n    const { asset } = this.props;\r\n    const { name, value, details, date } = asset || '';\r\n    // const { name } = this.state;\r\n\r\n    const field = (data) => {\r\n      const obj = [];\r\n      const name = data && Object.keys(data);\r\n      name && name.map(item => data[item] && obj.push({ name: [item], value: data[item] }))\r\n      console.log(obj)\r\n      return obj\r\n    }\r\n\r\n    // const fields = [\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"name\"\r\n    //     ],\r\n    //     \"value\": name,\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"details\"\r\n    //     ],\r\n    //     \"value\": details,\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"value\"\r\n    //     ],\r\n    //     \"value\": value && parseFloat(value),\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"date\"\r\n    //     ],\r\n    //     \"value\": date && moment(date,'YYYY-MM-DD'),\r\n    //   }\r\n    // ]\r\n    return (\r\n      <Form  {...layout} fields={field({ name, value: value && parseFloat(value), details, date: date && moment(date, 'YYYY-MM-DD') })} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n        <Form.Item name={'name'} label=\"Name\" rules={[{ required: true }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'details'} label=\"Details\" rules={[{ required: true }]} value={'here is  a descrition'}>\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"date\" label=\"DatePicker\" rules={[{ required: true }]} >\r\n          <DatePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'value'} label=\"Value\" rules={[{ required: true, type: 'number', min: 0 }]} >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default form;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message } from 'antd';\r\nimport Form from './form2';\r\nimport Base from '../../components/base';\r\nimport assetActions from '../../redux/asset/actions';\r\n\r\n\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      isCreated:props.isCreated,\r\n     }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\",props)\r\n    console.log(\"stay\",state)\r\n    const update = {};\r\n    // if (props.isLoading !== state.isLoading) {\r\n    //   update.isLoading = props.isLoading;\r\n    // }\r\n    update.isCreated = props.isCreated;\r\n\r\n    if (props.isCreated && !state.isCreated) {\r\n      message.success('This is a success message');\r\n      props.history.push('/asset');\r\n\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit=(data)=>{\r\n    const { createAsset } = this.props;\r\n    createAsset(data);\r\n  }\r\n  \r\n  render() { \r\n    const { isCreating } = this.props;\r\n    return ( \r\n      <Base title=\"Asset\" subtitle=\"Create\" isLoading={isCreating} >\r\n      <Form onSubmit={this.onSubmit}/>\r\n      </Base>\r\n     );\r\n  }\r\n}\r\n \r\nexport default connect(\r\n  state => ({\r\n    isCreating: state.asset.isCreating,\r\n    isCreated: state.asset.isCreated,\r\n  }),\r\n  { createAsset: assetActions.createAsset.request },\r\n)(create);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message, Button, Space, Spin, Skeleton } from 'antd';\r\nimport Form from './form2';\r\nimport Base from '../../components/base';\r\nimport assetActions from '../../redux/asset/actions';\r\n\r\n\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isUpdated: props.isUpdated,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match, getAsset,\r\n    } = this.props;\r\n    const { id } = match.params;\r\n    getAsset({ id });\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\", props)\r\n    console.log(\"stay\", state)\r\n    const {\r\n      match,\r\n    } = props;\r\n    const { id } = match.params;\r\n    const update = {};\r\n    // if (props.isLoading !== state.isLoading) {\r\n    //   update.isLoading = props.isLoading;\r\n    // }\r\n    if (props.asset && props.asset.id == id) {\r\n      update.asset = props.asset;\r\n    }\r\n    update.isUpdated = props.isUpdated;\r\n\r\n    if (props.isUpdated && !state.isUpdated) {\r\n      message.success('This is a success message');\r\n      props.history.push('/asset');\r\n\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit = (data) => {\r\n    const { updateAsset, match } = this.props;\r\n    const { id } = match.params;\r\n    updateAsset({ id, data });\r\n  }\r\n\r\n  render() {\r\n    const { asset } = this.state;\r\n    const { isLoading, isUpdating } = this.props;\r\n\r\n    return (\r\n      <Base title=\"Asset\" subtitle=\"Edit\" isLoading={isLoading} isUpdating={isUpdating} >\r\n        {asset && <Form asset={asset} onSubmit={this.onSubmit} isLoading={isLoading} isUpdating={isUpdating} />}\r\n      </Base>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    // isLoading: state.newUser.isLoading,\r\n    isUpdated: state.asset.isUpdated,\r\n    isUpdating: state.asset.isUpdating,\r\n    isLoading: state.asset.isLoading,\r\n    asset: state.asset.asset,\r\n  }),\r\n  {\r\n    updateAsset: assetActions.updateAsset.request,\r\n    getAsset: assetActions.getAsset.request,\r\n  },\r\n)(create);\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, InputNumber, Button, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 3 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nclass form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"shakil\",\r\n      count: 1,\r\n    }\r\n  }\r\n\r\n  onFinish = values => {\r\n    const { onSubmit } = this.props;\r\n\r\n    values.date = values.date.format('YYYY-MM-DD');\r\n    onSubmit(values);\r\n  };\r\n  nameChange = (e) => {\r\n    const { value } = e.target;\r\n    let { count } = this.state\r\n    this.setState({ name: value + count, count: count + 1 });\r\n  }\r\n  render() {\r\n    const { income } = this.props;\r\n    const { name, value, details, date } = income || '';\r\n    // const { name } = this.state;\r\n\r\n    const field = (data) => {\r\n      const obj = [];\r\n      const name = data && Object.keys(data);\r\n      name && name.map(item => data[item] && obj.push({ name: [item], value: data[item] }))\r\n      console.log(obj)\r\n      return obj\r\n    }\r\n\r\n    // const fields = [\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"name\"\r\n    //     ],\r\n    //     \"value\": name,\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"details\"\r\n    //     ],\r\n    //     \"value\": details,\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"value\"\r\n    //     ],\r\n    //     \"value\": value && parseFloat(value),\r\n    //   },\r\n    //   {\r\n    //     \"name\": [\r\n    //       \"date\"\r\n    //     ],\r\n    //     \"value\": date && moment(date,'YYYY-MM-DD'),\r\n    //   }\r\n    // ]\r\n    return (\r\n      <Form  {...layout} fields={field({ name, value: value && parseFloat(value), details, date: date && moment(date, 'YYYY-MM-DD') })} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n        <Form.Item name={'name'} label=\"Name\" rules={[{ required: true }]} >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'details'} label=\"Details\" rules={[{ required: true }]} value={'here is  a descrition'}>\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"date\" label=\"DatePicker\" rules={[{ required: true }]} >\r\n          <DatePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'value'} label=\"Value\" rules={[{ required: true, type: 'number', min: 0 }]} >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default form;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message, Button, Space } from 'antd';\r\nimport Form from './form2';\r\nimport Base from '../../components/base';\r\nimport incomeActions from '../../redux/income/actions';\r\n\r\n\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      isCreated:props.isCreated,\r\n     }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\",props)\r\n    console.log(\"stay\",state)\r\n    const update = {};\r\n    // if (props.isLoading !== state.isLoading) {\r\n    //   update.isLoading = props.isLoading;\r\n    // }\r\n    update.isCreated = props.isCreated;\r\n\r\n    if (props.isCreated && !state.isCreated) {\r\n      message.success('This is a success message');\r\n      props.history.push('/income');\r\n\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit=(data)=>{\r\n    const { createIncome } = this.props;\r\n    createIncome(data);\r\n  }\r\n  \r\n  render() { \r\n    const { isCreating } = this.props;\r\n    return ( \r\n      <Base title=\"Income\" subtitle=\"Create\" isLoading={isCreating} >\r\n      <Form onSubmit={this.onSubmit}/>\r\n      </Base>\r\n     );\r\n  }\r\n}\r\n \r\nexport default connect(\r\n  state => ({\r\n    isCreating: state.income.isCreating,\r\n    isCreated: state.income.isCreated,\r\n  }),\r\n  { createIncome: incomeActions.createIncome.request },\r\n)(create);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message, Button, Space, Spin, Skeleton } from 'antd';\r\nimport Form from './form2';\r\nimport Base from '../../components/base';\r\nimport incomeActions from '../../redux/income/actions';\r\n\r\n\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isUpdated: props.isUpdated,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match, getIncome,\r\n    } = this.props;\r\n    const { id } = match.params;\r\n    getIncome({ id });\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\", props)\r\n    console.log(\"stay\", state)\r\n    const {\r\n      match,\r\n    } = props;\r\n    const { id } = match.params;\r\n    const update = {};\r\n    // if (props.isLoading !== state.isLoading) {\r\n    //   update.isLoading = props.isLoading;\r\n    // }\r\n    if (props.income && props.income.id == id) {\r\n      update.income = props.income;\r\n    }\r\n    update.isUpdated = props.isUpdated;\r\n\r\n    if (props.isUpdated && !state.isUpdated) {\r\n      message.success('This is a success message');\r\n      props.history.push('/income');\r\n\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit = (data) => {\r\n    const { updateIncome, match } = this.props;\r\n    const { id } = match.params;\r\n    updateIncome({ id, data });\r\n  }\r\n\r\n  render() {\r\n    const { income } = this.state;\r\n    const { isLoading, isUpdating } = this.props;\r\n\r\n    return (\r\n      <Base title=\"Income\" subtitle=\"Edit\" isLoading={isLoading} isUpdating={isUpdating} >\r\n        {income && <Form income={income} onSubmit={this.onSubmit} isLoading={isLoading} isUpdating={isUpdating} />}\r\n      </Base>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    // isLoading: state.newUser.isLoading,\r\n    isUpdated: state.income.isUpdated,\r\n    isUpdating: state.income.isUpdating,\r\n    isLoading: state.income.isLoading,\r\n    income: state.income.income,\r\n  }),\r\n  {\r\n    updateIncome: incomeActions.updateIncome.request,\r\n    getIncome: incomeActions.getIncome.request,\r\n  },\r\n)(create);\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, InputNumber, Button, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 3 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: '${label} is required!',\r\n  types: {\r\n    email: '${label} is not validate email!',\r\n    number: '${label} is not a validate number!',\r\n  },\r\n  number: {\r\n    range: '${label} must be between ${min} and ${max}',\r\n  },\r\n};\r\n\r\nclass form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {}\r\n  }\r\n\r\n  onFinish = values => {\r\n    const { onSubmit } = this.props;\r\n    \r\n    values.date = values.date.format('YYYY-MM-DD');\r\n    onSubmit(values);\r\n  };\r\n  render() {\r\n    const { cost } = this.props;\r\n    const { name, value, details, date } = cost || '';\r\n    return (\r\n      <Form  {...layout} name=\"nest-messages\" onFinish={this.onFinish} validateMessages={validateMessages}>\r\n        <Form.Item name={'name'} label=\"Name\" rules={[{ required: true }]} initialValue={name}>\r\n          <Input  />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'details'} label=\"Details\" rules={[{ required: true }]} initialValue={details}>\r\n          <Input.TextArea value={'here is  a descrition'} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"date\" label=\"DatePicker\" rules={[{ required: true }]} initialValue={date && moment(date,'YYYY-MM-DD')}>\r\n          <DatePicker  />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={'value'} label=\"Value\" rules={[{ required: true, type: 'number', min: 0 }]} initialValue={value && parseFloat(value)}>\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default form;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { message, Button, Table } from 'antd';\r\nimport Form from './form';\r\nimport Base from '../../components/base';\r\nimport incomeActions from '../../redux/income/actions';\r\nimport {\r\n  PlusCircleTwoTone,\r\n} from '@ant-design/icons';\r\n\r\nconst defaultPagination = {\r\n  current: 1,\r\n  pageSize: 10,\r\n};\r\n\r\n\r\nclass create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: props.isLoading,\r\n      pagination: defaultPagination,\r\n\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { getIncomes } = this.props;\r\n    getIncomes(defaultPagination)\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log(\"props\", props)\r\n    console.log(\"stay\", state)\r\n    const update = {};\r\n\r\n    if (props.isLoading !== state.isLoading) {\r\n      update.isLoading = props.isLoading;\r\n    }\r\n\r\n    if (props.incomes) {\r\n      update.incomes = props.incomes;\r\n      update.pagination = {\r\n        current: props.incomes.data.current_page,\r\n        pageSize: props.incomes.data.per_page,\r\n        total: props.incomes.data.total,\r\n      };\r\n    }\r\n    update.isCreated = props.isCreated;\r\n\r\n    if (props.isCreated && !state.isCreated) {\r\n      // props.history.push('/');\r\n      message.success('This is a success message');\r\n    }\r\n    return update;\r\n  }\r\n\r\n  onSubmit = (data) => {\r\n    const { createIncome } = this.props;\r\n    createIncome(data);\r\n  }\r\n\r\n  handleRefresh = (page) => {\r\n    const { pagination } = this.state;\r\n    const { getIncomes } = this.props;\r\n    pagination.current = page.current;\r\n    pagination.pageSize = page.pageSize;\r\n    this.setState({\r\n      pagination,\r\n    });\r\n    getIncomes(page);\r\n  }\r\n\r\n  render() {\r\n    const { incomes, pagination, isLoading } = this.state;\r\n\r\n    const buttons = (<Button onClick={()=>this.props.history.push(\"income/create\")} icon={<PlusCircleTwoTone />} type=\"primary\" style={{ float: \"right\" }} >New</Button>)\r\n    const columns = [\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Amount',\r\n        dataIndex: 'value',\r\n        key: 'value',\r\n      },\r\n      {\r\n        title: 'Details',\r\n        dataIndex: 'details',\r\n        key: 'details',\r\n        responsive: ['md'],\r\n      },\r\n      {\r\n        title: 'Date',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        responsive: ['md'],\r\n      },\r\n      {\r\n        title: 'Action',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        render: id => <Button type=\"primary\" onClick={() => this.props.history.push(`/income/${id}`)}>Edit</Button>,\r\n\r\n      },\r\n    ];\r\n\r\n    const tableProps = {\r\n      dataSource: incomes && incomes.data && incomes.data.data && incomes.data.data,\r\n      pagination,\r\n      loading: isLoading,\r\n      onChange: (page) => {\r\n        this.handleRefresh(page);\r\n      },\r\n      columns,\r\n    };\r\n    return (\r\n      <Base buttons={buttons} title=\"Income\" subtitle=\"List\" >\r\n        <Table {...tableProps} />\r\n      </Base >\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    isLoading: state.income.isLoading,\r\n    incomes: state.income.incomes,\r\n  }),\r\n  { getIncomes: incomeActions.getIncomes.request },\r\n)(create);\r\n","import React from 'react';\r\nimport { Router, Route, Switch, Link, NavLink } from 'react-router-dom';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport PublicRoute from './publicRoute';\r\nimport PrivateRoute from './privateRoute';\r\n\r\nimport Practice from '../views/practice';\r\nimport Login from '../views/login';\r\nimport Register from '../views/register';\r\nimport Home from '../views/home';\r\n\r\nimport NewCost from '../views/cost/create';\r\nimport EditCost from '../views/cost/edit';\r\nimport Cost from '../views/cost';\r\n\r\nimport NewLoan from '../views/loan/create';\r\nimport EditLoan from '../views/loan/edit';\r\nimport Loan from '../views/loan';\r\n\r\nimport NewAsset from '../views/asset/create';\r\nimport EditAsset from '../views/asset/edit';\r\nimport Asset from '../views/asset';\r\n\r\nimport NewIncome from '../views/income/create';\r\nimport EditIncome from '../views/income/edit';\r\nimport Income from '../views/income';\r\n\r\n\r\n\r\n\r\nexport const history = createHistory();\r\n\r\nconst AppRouter = () => (\r\n  <Router history={history}>\r\n    <div>\r\n      <Switch>\r\n        <PrivateRoute  path=\"/practice\" component={Practice} exact={true} />\r\n        <PublicRoute path=\"/login\" component={Login} exact={true} />\r\n        <PublicRoute path=\"/register\" component={Register} exact={true} />  \r\n        <PrivateRoute path=\"/\" component={Home} exact={true} /> \r\n        <PrivateRoute path=\"/Cost/create\" component={NewCost} exact={true} /> \r\n        <PrivateRoute path=\"/Cost\" component={Cost} exact={true} /> \r\n        <PrivateRoute path=\"/Cost/:id\" component={EditCost} exact={true} /> \r\n\r\n        <PrivateRoute path=\"/Loan/create\" component={NewLoan} exact={true} /> \r\n        <PrivateRoute path=\"/Loan\" component={Loan} exact={true} /> \r\n        <PrivateRoute path=\"/Loan/:id\" component={EditLoan} exact={true} /> \r\n\r\n        <PrivateRoute path=\"/Asset/create\" component={NewAsset} exact={true} /> \r\n        <PrivateRoute path=\"/Asset\" component={Asset} exact={true} /> \r\n        <PrivateRoute path=\"/Asset/:id\" component={EditAsset} exact={true} /> \r\n\r\n        <PrivateRoute path=\"/Income/create\" component={NewIncome} exact={true} /> \r\n        <PrivateRoute path=\"/Income\" component={Income} exact={true} /> \r\n        <PrivateRoute path=\"/Income/:id\" component={EditIncome} exact={true} /> \r\n     {/*   <PrivateRoute path=\"/admin\" component={AdminPage} />\r\n     \r\n      <PrivateRoute path=\"/addAmount/:id\" component={EditProductPage} />\r\n        <Route component={Practice} /> */}\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport 'antd/dist/antd.css';\r\nimport Route from './route/router';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Route />\r\n  </Provider >,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}